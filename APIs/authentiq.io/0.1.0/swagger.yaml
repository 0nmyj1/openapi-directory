swagger: '2.0'
schemes:
  - https
  - wss
host: connect.authentiq.io
basePath: /
info:
  contact:
    email: hello@authentiq.com
    name: the Authentiq team
    url: 'http://authentiq.com/support'
  description: |
    Authentiq Connect OAuth 2.0 and OpenID Connect API reference documentation.

    [Learn about Authentiq ID](http://authentiq.com) or join our IRC channel [#authentiq on irc.freenode.net](https://webchat.freenode.net/?channels=authentiq).
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'http://authentiq.com/terms/'
  title: Authentiq Connect
  version: 0.1.0
  x-logo:
    backgroundColor: '#F26641'
    url: 'https://www.authentiq.com/theme/images/authentiq-logo-a-inverse.svg'
  x-origin:
    format: swagger
    url: 'https://raw.githubusercontent.com/AuthentiqID/authentiq-docs/master/docs/swagger/provider.yaml'
    version: '2.0'
  x-providerName: authentiq.io
securityDefinitions:
  client_registration_token:
    description: Client management via registration token.
    in: header
    name: Authorization
    type: apiKey
  client_secret:
    description: Session management by confidential clients.
    flow: password
    scopes:
      clients: Enable client management
    tokenUrl: 'https://connect.authentiq.io/token'
    type: oauth2
  oauth_code:
    authorizationUrl: 'https://connect.authentiq.io/authorize'
    description: End-user authentication.
    flow: accessCode
    scopes:
      address: The user's postal address
      'aq:location': The user's current location
      'aq:name': The user's full name
      'aq:push': Enable *One click sign-in*
      email: The user's email address
      oidc: Enable OIDC flow
      phone: The user's phone number
    tokenUrl: 'https://connect.authentiq.io/token'
    type: oauth2
  oauth_implicit:
    authorizationUrl: 'https://connect.authentiq.io/authorize'
    description: End-user authentication.
    flow: implicit
    scopes:
      address: The user's postal address
      'aq:location': The user's current location
      'aq:name': The user's full name
      'aq:push': Enable *One click sign-in*
      email: The user's email address
      oidc: Enable OIDC flow
      phone: The user's phone number
    type: oauth2
  user_jwt:
    description: Session management by Authentiq ID.
    flow: application
    scopes:
      session: Enable session management
    tokenUrl: 'https://connect.authentiq.io/token'
    type: oauth2
parameters:
  clientParam:
    description: Client identifier
    in: path
    name: client_id
    required: true
    type: string
responses:
  OAuth2ErrorResponse:
    description: OAuth 2.0 error response
    schema:
      $ref: '#/definitions/OAuth2Error'
  ProblemReportResponse:
    description: HTTP problem report
    schema:
      $ref: '#/definitions/ProblemReport'
  TokenErrorResponse:
    description: Token error response
    headers:
      WWW-Authenticate:
        description: ''
        type: string
paths:
  /authorize:
    get:
      description: |
        A standard OpenID Connect authorization endpoint, used to initiate end-user authentication.

        Example:
        ```
        GET https://connect.authentiq.io/authorize?client_id=<your-client-id>&response_type=code id_token
        ```

        This endpoint also supports the POST method.

        See also:
          - [OAuth 2.0 Authorization Endpoint](http://tools.ietf.org/html/rfc6749#section-3.1)
          - [OIDC Authentication request](http://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)
          - [OIDC Successful Authentication response](http://openid.net/specs/openid-connect-core-1_0.html#AuthResponse)
          - [OIDC Error Authentication response](http://openid.net/specs/openid-connect-core-1_0.html#AuthError)
      operationId: authorize
      parameters:
        - description: |
            The client ID obtained from the [Client Management console](/clients).
          in: query
          name: client_id
          required: true
          type: string
        - description: |
            The OAuth 2.0 or OIDC response type to use for this authentication. Choices are `code`, `id_token`, `token`, `token id_token`, `code id_token` `code token` and `code token id_token`. Defaults to `code`.
          in: query
          name: response_type
          required: true
          type: string
        - description: |
            The [identity claims](/index.md#scopes) to request from the end-user. Defaults to the scope provided when registering the client.
          in: query
          name: scope
          required: false
          type: string
        - description: |
            The location to redirect to after successful or erroneous authentication. See OIDC for the values provided as query parameters (`response_mode=query`) or as fragments (`response_mode=fragment`). Must be one of the redirect URLs registered for this client; defaults to the first listed.
          in: query
          name: redirect_uri
          required: false
          type: string
        - description: |
            An opaque string that will be passed back to the redirect URL and therefore can be used to communicate client side state and prevent CSRF attacks.
          in: query
          name: state
          required: false
          type: string
        - description: |
            Whether to append items to the redirect URL as query parameters (`query`) or fragments (`fragment`).
          in: query
          name: response_mode
          required: false
          type: string
        - description: |
            An nonce provided by the client (and opaque to Authentiq Connect) that will be included in any ID Token generated for this session. Clients should use the nonce to mitigate replay attacks.
          in: query
          name: nonce
          required: false
          type: string
        - description: |
            The authentication display mode, which can be one of `page`, `popup` or `modal`. Defaults to `page`.
          in: query
          name: display
          required: false
          type: string
        - description: |
            If `consent` the end-user is asked to (re)confirm what claims are shared, potentially disabling *One click sign-in*. Defaults to `login`, which allows *One click sign-in*.
          in: query
          name: prompt
          required: false
          type: string
        - description: |
            Specifies the allowable elapsed time in seconds since the last time the end-user was actively authenticated.
          in: query
          name: max_age
          required: false
          type: string
        - description: |
            Specifies the preferred language to use on the authorization page, as a space-separated list of BCP47 language tags.
          in: query
          name: ui_locales
          required: false
          type: string
      produces:
        - text/html
      responses:
        '200':
          description: |
            *Sign in with Authentiq* page, popup or modal.
        '302':
          description: |
            A successful or erroneous authentication response.
          headers:
            Location:
              description: |
                Redirected URI with code, token and id_token, or error response parameters appended.
              type: string
      summary: OpenID Connect authorization endpoint.
      tags:
        - Authentication
  /authorize/iframe:
    get:
      description: |
        A standard OpenID Connect Session Management iframe implementing the suggested [postMessage interface](http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification).

        See also:
        - [OIDC OP iframe](http://openid.net/specs/openid-connect-session-1_0.html#OPiframe)
      operationId: authorizeIframe
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              description: 'public, max-age=7200'
              type: string
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      summary: OpenID Connect Session Management iframe.
      tags:
        - Session Management
  /authorize/logout:
    get:
      description: |
        A standard OpenID Connect Session Management logout endpoint.

        This endpoint will sign out any session for which an `id_token_hint` is provided. If no hint is provided, the end-user is asked to confirm the session to sign out off.

        It is possible to activate this method by means of a browser redirect, or from within an iframe. Usually you would want to pass `post_logout_redirect_uri` and `state` parameters in the former, but not the latter case.

        Any `post_logout_redirect_uri` needs to be pre-registered with the client.

        See also:
        - [OIDC RP-Initiated Logout](http://openid.net/specs/openid-connect-session-1_0.html#RPLogout)
      operationId: authorizeLogout
      parameters:
        - description: A previously obtained ID Token.
          in: query
          name: id_token_hint
          required: false
          type: string
        - description: A previously registered URI to redirect to after successful sign-out.
          in: query
          name: post_logout_redirect_uri
          required: false
          type: string
        - description: An opaque string appended to the redirect URI.
          in: query
          name: state
          required: false
          type: string
      responses:
        '204':
          description: Signed out successfully
        '302':
          description: Signed out successfully
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      summary: OpenID Connect RP logout endpoint.
      tags:
        - Session Management
  /client:
    get:
      description: |
        An endpoint to retrieve a list of available clients.
      operationId: client
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Client'
            type: array
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      security:
        - client_registration_token: []
        - oauth_code: []
        - oauth_implicit: []
      summary: List account clients.
      tags:
        - Client Management
    post:
      consumes:
        - application/json
        - multipart/form-data
      description: |
        An OIDC Client Registration Endpoint.

        See also:
        - [OpenID Connect Dynamic Client Registration](http://openid.net/specs/openid-connect-registration-1_0.html)
        - [Client Registration Endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration)
      operationId: createClient
      parameters:
        - description: Client object that needs to be added to the Account
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '201':
          description: Success
          headers:
            Location:
              description: Location of new client resource.
              type: string
      security:
        - client_registration_token: []
        - oauth_code: []
        - oauth_implicit: []
      summary: Client Registration Endpoint.
      tags:
        - Client Management
  '/client/{client_id}':
    delete:
      description: ''
      operationId: clientClient_id
      parameters:
        - in: path
          name: client_id
          required: true
          type: string
      responses:
        '200':
          description: Success
        '401':
          description: No access to Client object
        '404':
          description: Client ID does not exist
      security:
        - client_registration_token: []
        - oauth_code: []
        - oauth_implicit: []
      summary: Delete a client.
      tags:
        - Client Management
    get:
      description: |
        An OIDC Client Configuration Endpoint.

        See also:
        - [Client Configuration Endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientConfigurationEndpoint)
      operationId: getClient
      parameters:
        - in: path
          name: client_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Client'
        '401':
          description: No access to Client object (incorrect secret)
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Client ID not found
          schema:
            $ref: '#/definitions/Error'
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      security:
        - client_registration_token: []
        - oauth_code: []
        - oauth_implicit: []
      summary: Client Configuration Read Endpoint.
      tags:
        - Client Management
    put:
      consumes:
        - application/json
        - multipart/form-data
      description: |
        An OIDC Client Configuration Endpoint.

        See also:
        - [Client Configuration Endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientConfigurationEndpoint)
      operationId: updateClient
      parameters:
        - description: Client object that needs to be added to the Account
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Client'
        - in: path
          name: client_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Client'
        '401':
          description: No access to Client object (incorrect secret)
        '404':
          description: Client ID not found
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - client_registration_token: []
        - oauth_code: []
        - oauth_implicit: []
      summary: Client Configuration Update Endpoint.
      tags:
        - Client Management
  '/client/{client_id}/session':
    post:
      operationId: clientclient_idsession
      parameters:
        - description: space sep list of strings
          in: formData
          name: scope
          required: false
          type: string
        - in: path
          name: client_id
          required: true
          type: string
      responses:
        '201':
          description: A new authentication session.
          schema:
            $ref: '#/definitions/Session'
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      security:
        - client_secret: []
        - user_jwt: []
      summary: Create a new authentication session for a client.
      tags:
        - Sessions
  /session:
    post:
      operationId: session
      parameters:
        - description: space sep list of strings
          in: formData
          name: scope
          required: true
          type: string
      responses:
        '201':
          description: A new authentication session.
          schema:
            $ref: '#/definitions/Session'
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      security:
        - client_secret:
            - clients
        - user_jwt:
            - session
      summary: Create an anonymous authentication session.
      tags:
        - Sessions
  '/session/{session_id}':
    post:
      consumes:
        - application/jwt
        - application/x-www-form-urlencoded
        - multipart/form-data
      description: |
        This method is used by Authentiq ID app to post signed identity claims after end-user consent.
      operationId: session1234
      parameters:
        - description: ''
          in: query
          name: token
          required: false
          type: string
        - description: ''
          in: formData
          name: bind_token
          required: false
          type: string
        - description: ''
          in: formData
          name: push_token
          required: false
          type: string
        - description: ''
          in: formData
          name: id_token
          required: false
          type: string
        - description: ''
          in: formData
          name: userinfo
          required: false
          type: string
        - in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: Successful token upload.
          schema:
            $ref: '#/definitions/Session'
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      security:
        - client_secret: []
        - user_jwt: []
      summary: Add identity tokens to pending authentication session.
  /token:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: |
        A standard OpenID Connect token endpoint, used to communicate tokens to confidential
        clients, usually by means of an intermediate authorization code grant.

        Example:
        ```
        POST https://connect.authentiq.io/token?client_id=<your-client-id>&client_secret=<client-secret>
            &grant_type=authorization_code&code=<code>&redirect_uri=<redirect-uri>
        ```

        See also:
          - [OAuth 2.0 Token Endpoint](http://tools.ietf.org/html/rfc6749#section-3.2)
          - [OIDC Token request](http://openid.net/specs/openid-connect-core-1_0.html#TokenRequest)
          - [OIDC Successful Token response](http://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)
          - [OIDC Token Error response](http://openid.net/specs/openid-connect-core-1_0.html#TokenErrorResponse)
      operationId: token
      parameters:
        - description: |
            The registered client ID.
          in: header
          name: client_id
          required: true
          type: string
        - description: |
            The registered client ID secret.
          format: password
          in: header
          name: client_secret
          required: true
          type: string
        - description: |
            The authorization grant type, must be `authorization_code`.
          in: formData
          name: grant_type
          required: true
          type: string
        - description: |
            The authorization code previously obtained from the Authentication endpoint.
          in: formData
          name: code
          required: true
          type: string
        - description: |
            The redirect URL that was used previously with the Authentication endpoint.
          in: formData
          name: redirect_uri
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              description: no-store
              type: string
            Pragma:
              description: no-cache
              type: string
          schema:
            properties:
              access_token:
                type: string
              expires_in:
                format: int32
                minimum: 0
                type: integer
              id_token:
                type: string
              refresh_token:
                type: string
              session_state:
                type: string
              token_type:
                type: string
            required:
              - token_type
              - expires_in
            type: object
        default:
          $ref: '#/responses/TokenErrorResponse'
      summary: OpenID Connect token endpoint.
      tags:
        - Authentication
  /userinfo:
    get:
      description: |
        A standard OpenID Connect UserInfo endpoint.

        Example:
        ```
        GET /userinfo
        ```

        This endpoint can return a UserInfo structure as JSON, or as a JWT signed by the end-user with an Ed25519 signature.

        See also:
        - [OIDC UserInfo endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo)
      operationId: userInfo
      produces:
        - application/json
        - application/jwt
      responses:
        '200':
          description: Successful UserInfo response
          schema:
            $ref: '#/definitions/UserInfo'
        '401':
          $ref: '#/responses/TokenErrorResponse'
          description: UserInfo error response
        default:
          $ref: '#/responses/OAuth2ErrorResponse'
      security:
        - oauth_code:
            - oidc
            - email
            - phone
            - address
            - 'aq:location'
            - 'aq:name'
            - 'aq:push'
        - oauth_implicit:
            - oidc
            - email
            - phone
            - address
            - 'aq:location'
            - 'aq:name'
            - 'aq:push'
      summary: OpenID Connect UserInfo endpoint.
      tags:
        - Authentication
definitions:
  Address:
    description: OIDC Address structure
    properties:
      country:
        type: string
      locality:
        type: string
      postal_code:
        type: string
      region:
        type: string
      street_address:
        type: string
  Client:
    description: Client object
    properties:
      application_type:
        type: string
      client_id:
        type: string
      client_name:
        type: string
      client_uri:
        type: string
      contacts:
        items:
          type: string
        type: array
      default_max_age:
        format: int64
        type: integer
      default_scopes:
        items:
          type: string
        type: array
      grant_types:
        items:
          type: string
        type: array
      logo_uri:
        type: string
      policy_uri:
        type: string
      redirect_uris:
        items:
          type: string
        type: array
      response_types:
        items:
          type: string
        type: array
      tos_uri:
        type: string
    required:
      - client_name
      - client_uri
  Error: {}
  OAuth2Error:
    description: |
      Error Response defined as in Section 5.2 of OAuth 2.0 [RFC6749].
    properties:
      error:
        type: string
      error_description:
        type: string
      state:
        type: integer
    required:
      - error
  ProblemReport:
    description: |
      HTTP problem report
    properties:
      detail:
        type: string
      status:
        type: integer
      title:
        type: string
      type:
        type: string
    required:
      - type
      - status
  Session:
    description: Session object
    properties:
      authenticated_at:
        format: date-time
        type: string
      client_id:
        type: string
      client_name:
        type: string
      client_uri:
        type: string
      concluded_at:
        format: date-time
        type: string
      connected_at:
        format: date-time
        type: string
      contacts:
        items:
          type: string
        type: array
      created_at:
        type: string
      deleted_at:
        format: date-time
        type: string
      logo_uri:
        type: string
      nonce:
        type: string
      policy_uri:
        type: string
      redirect_uri:
        type: string
      response_mode:
        type: string
      response_type:
        type: string
      scopes:
        items:
          type: string
        type: array
      scopes_optional:
        items:
          type: string
        type: array
      scopes_required:
        items:
          type: string
        type: array
      scopes_seen:
        items:
          type: string
        type: array
      scopes_signed:
        items:
          type: string
        type: array
      session_id:
        type: string
      session_state:
        type: string
      session_uri:
        type: string
      sub:
        type: string
      tokens_seen:
        items:
          type: string
        type: array
      tos_uri:
        type: string
      version:
        type: integer
  UserInfo:
    description: OIDC UserInfo structure
    properties:
      address:
        $ref: '#/definitions/Address'
      'aq:location':
        description: Geolocation structure
        properties:
          address:
            $ref: '#/definitions/Address'
          latitude:
            format: float
            type: number
          longitude:
            format: float
            type: number
      email:
        type: string
      email_verified:
        type: boolean
      family_name:
        type: string
      given_name:
        type: string
      name:
        type: string
      phone_number:
        type: string
      phone_number_verified:
        type: boolean
      sub:
        type: string
    required:
      - sub
