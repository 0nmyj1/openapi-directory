swagger: '2.0'
schemes:
  - https
host: api.rebilly.com
basePath: /v2.1
info:
  contact:
    email: integrations@rebilly.com
    name: Rebilly API Support
    url: 'https://www.rebilly.com/contact/'
  license:
    name: Rebilly
    url: 'https://www.rebilly.com/api/license/'
  termsOfService: 'https://www.rebilly.com/terms/'
  title: Rebilly
  version: '2.1'
  x-logo:
    backgroundColor: '#0033A0'
    url: 'https://rebilly.github.io/RebillyAPI/rb_apiLogo.svg'
  x-origin:
    format: swagger
    url: 'http://rebilly.github.io/RebillyAPI/swagger.json'
    version: '2.0'
  x-providerName: rebilly.com
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  ApiKey:
    description: |
      When you sign up for an account, you are given your first API key.
      To do so please follow this link: https://www.rebilly.com/site/signup/
      Also you can generate additional API keys, and delete API keys (as you may
      need to rotate your keys in the future).
    in: header
    name: REB-APIKEY
    type: apiKey
  JWT:
    description: |
      You can create a JSON Web Token (JWT) via our Sessions resource.
    type: basic
  RebAuth:
    description: |
      Only for the Tokens resource.
      The REB-AUTH value is created in this way
      Generate a Nonce (random string), and a Timestamp (unix timestamp)
      Concatenate the values of ApiUser, Nonce, and Timestamp (in that order).
      Use that value as the input data when you calculate the <a href="http://tools.ietf.org/html/rfc2104">HMAC-SHA1</a> with your secret key, called the signature.
      Forming the four data points into a JSON object.  {"REB-APIUSER":"abcdefg","REB-NONCE":"adfsjtreitou345fgkdafgj","REB-TIMESTAMP":"1382591345","REB-SIGNATURE":"a234fc95460401cfg09c9d09"}
      Then base64 encode that JSON object.  This is the final value of the REB-AUTH HTTP header
    in: header
    name: REB-AUTH
    type: apiKey
security:
  - ApiKey: []
parameters:
  collectionExpand:
    description: Expand response to get full related object intead of ID.  See the expand guide for more info.
    in: query
    name: expand
    type: string
  collectionFields:
    description: 'Limit the returned fields to the list specified, separated by comma.  Note that id is always returned.'
    in: query
    name: fields
    type: string
  collectionFilter:
    description: |
      The collection items filter requires a special format.
      Use "," for multiple allowed values.  Use ";" for multiple fields.
      See the filter guide for more options and examples about this format.
    in: query
    name: filter
    type: string
  collectionLimit:
    description: The collection items limit
    in: query
    maximum: 1000
    minimum: 0
    name: limit
    type: integer
  collectionOffset:
    description: The collection items offset
    in: query
    minimum: 0
    name: offset
    type: integer
  collectionQuery:
    description: The partial search of the text fields.
    in: query
    name: q
    type: string
  collectionSort:
    description: The collection items sort field and order (prefix with "-" for descending sort).
    in: query
    name: sort
    type: string
  resourceId:
    description: The resource identifier string
    in: path
    name: id
    required: true
    type: string
responses:
  AccessForbidden:
    description: 'Access forbidden, invalid API-KEY was used'
    schema:
      $ref: '#/definitions/Error'
  Conflict:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  InvalidDataError:
    description: Invalid data was sent
    schema:
      $ref: '#/definitions/InvalidError'
  NotFound:
    description: Resource was not found
    schema:
      $ref: '#/definitions/Error'
tags:
  - description: |
      The Rebilly API is built on HTTP.  Our API is RESTful.  It has predictable
      resource URLs.  It returns HTTP response codes to indicate errors.  It also
      accepts and returns JSON in the HTTP body.  You can use your favorite
      HTTP/REST library for your programming language to use Rebilly's API, or
      you can use one of our SDKs (currently available in [PHP](https://github.com/Rebilly/rebilly-php)
      and [C#](https://github.com/Rebilly/rebilly-dotnet-client)).
    name: Introduction
  - description: |
      When you sign up for an account, you are given your first API key.
      You can generate additional API keys, and delete API keys (as you may
      need to rotate your keys in the future). You authenticate to the
      Rebilly API by providing your secret key in the request header.

      Rebilly offers three forms of authentication:  private key, JSON Web Tokens, and
      public key.
      - private key: authenticates each request by searching for the presence
      of an HTTP header: REB-APIKEY.
      - JWT: authenticates each request by the HTTP header: Authorization.
      - public key: authenticates by the HTTP header: REB-AUTH (read more on this below).

      Rebilly also offers JSON Web Tokens (JWT) authentication, where you can control
      the specific granular permissions and expiration for that JWT.  We call our resource
      for generating JWT [Sessions](#tag/Session).

      Rebilly also has a client-side authentication scheme that uses an
      apiUser and HMAC-SHA1 signature (only for the Tokens resource), so
      that you may safely create tokens from the client-side without compromising
      your secret keys.

      Never share your secret keys. Keep them guarded and secure.
      The client-side authentication scheme uses one HTTP header named REB-AUTH.
    name: Authentication
  - description: |
      Customers are your customers, sometimes known as accounts, clients,
      members, patrons, or players in other systems.
    name: Customers
  - description: |
      Contacts belong to Customers. A Customer can have many contacts.
      Some contacts are associated to Invoices, Payment Cards, Subscriptions
      and Transactions.
    name: Contacts
  - description: |
      Your blacklists contains values of customerIds, email addresses,
      ipAddresses, bank identification numbers, countries or payment cards that
      you do NOT want to do business with. They are a good tool for managing
      risk. A blacklist entry that expires after a period of time we call a
      greylist.
    name: Blacklists
  - description: |
      Layouts are used to hold collections of plans. A layout can be used to
      power a pricing page. You can make multiple layouts, and use rules to
      target them to different audiences.
    name: Layouts
  - description: |
      Organizations include the name and address of the entities related to your
      account. An account may be multi-national, and support multiple
      organizations. Note: Organizations are share between "Live" and "Sandbox"
    name: Organizations
  - description: |
      Collect money from your customers with payments.  You can schedule a payment
      to occur in the future.  You can assign a dunning schedule to a payment to collect
      in the case of a decline

      Some payments may be, what we term, suspended payments.  These types of payments
      require user interaction.  For example, an initial PayPal purchase, a 3D Secure
      purchase, China Union Pay, and more require the customer's interaction to
      complete the payment.  We call these a "suspended" payment flow.
    name: Payments
  - description: |
      Proposed:  Your product includes digital goods, services, and physical goods.
    name: Products
  - description: |
      Proposed: You can map a product to a tax category.  The tax category is used by
      tax providers to calculate taxes for invoices.
    name: Taxes
  - description: |
      A Website represents the website/brand that customers interact with... You
      could think of it like a brand.  For example, Nestle owns Perrier and Purina
      and PowerBar.

      We recognize that some enterprises have more than one website (or brand).  The
      website is related to each invoice and each payment gateway account.  This feature
      would allow you to have gateway accounts that are related to multiple websites, or
      exclusive to particular websites.  And gives you more control over your business.
    name: Websites
  - description: |
      A User represents a person who can login to Rebilly, and take actions subject to
      their granted permissions.
    name: Users
  - description: |
      A session contains a token, which is a JSON Web Token.  The token is created
      with a user's signin credentials.

      This token can be used to authenticate to the API.  In addition, the session can be set to
      expire at a particular time, and has very granular control over permissions.
      Use the token to then authenticate for further requests to the Rebilly API.

      The token should be kept private, but could be stored on the user's browser
      client to simulate a "session."
    name: Sessions
  - description: |
      Tracking is a layer for accessing all the activity (API requests,
      subscriptions, webhooks, events, etc.), thus providing easier
      debugging and issues auditing.
    name: Tracking
paths:
  /3dsecure:
    get:
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/ThreeDSecure'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of ThreeDSecure entries
      tags:
        - 3D Secure
    post:
      description: |
        Create a ThreeDSecure entry
      parameters:
        - description: ThreeDSecure resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ThreeDSecure'
      responses:
        '201':
          description: ThreeDSecure entry was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ThreeDSecure'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
          description: Invalid data was sent
      summary: Create a ThreeDSecure entry
      tags:
        - 3D Secure
  '/3dsecure/{id}':
    get:
      description: |
        Retrieve a ThreeDSecure entry with specified identifier string
      responses:
        '200':
          description: ThreeDSecure entry was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ThreeDSecure'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a ThreeDSecure entry
      tags:
        - 3D Secure
    parameters:
      - $ref: '#/parameters/resourceId'
  /api-keys:
    get:
      description: |
        Retrieve a list of api keys
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of api keys was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/ApiKey'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of api keys
      tags:
        - API Keys
    post:
      description: |
        Create an api key
      parameters:
        - description: ApiKey resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApiKey'
      responses:
        '201':
          description: Api Key was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ApiKey'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create an api key
      tags:
        - API Keys
  '/api-keys/{id}':
    delete:
      description: |
        Delete api key with predefined identifier string
      responses:
        '204':
          description: ApiKey was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
          description: ApiKey has related resources and cannot be deleted
      summary: Delete api key
      tags:
        - API Keys
    get:
      description: |
        Retrieve api key with specified identifier string
      responses:
        '200':
          description: Api key was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ApiKey'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve api key
      tags:
        - API Keys
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update api key with predefined identifier string
      parameters:
        - description: ApiKey resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApiKey'
      responses:
        '200':
          description: ApiKey was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ApiKey'
        '201':
          description: ApiKey was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ApiKey'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/InvalidDataError'
          description: Invalid data was sent
      summary: Create or update api key with predefined ID
      tags:
        - API Keys
  /authentication-options:
    get:
      description: |
        Read current authentication options
      responses:
        '200':
          description: Current authentication options was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/AuthenticationOptions'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Read current authentication options
      tags:
        - Customer Authentication
    put:
      description: |
        Change options
      parameters:
        - description: Authentication Options resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationOptions'
      responses:
        '200':
          description: Authentication Options were updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/AuthenticationOptions'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Change authentication options
      tags:
        - Customer Authentication
  /authentication-tokens:
    get:
      description: |
        Retrieve a list of auth tokens
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of auth tokens was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/AuthenticationToken'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of auth tokens
      tags:
        - Customer Authentication
    post:
      description: |
        Login a user (customer)
      parameters:
        - description: AuthenticationToken resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationToken'
      responses:
        '201':
          description: Login successful
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/AuthenticationToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Login
      tags:
        - Customer Authentication
  '/authentication-tokens/{token}':
    delete:
      description: |
        Logout a user
      responses:
        '204':
          description: User was logged out
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Logout a user
      tags:
        - Customer Authentication
    get:
      description: |
        Verify an authentication token
      responses:
        '200':
          description: Authentication Token was verified
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/AuthenticationToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Verify
      tags:
        - Customer Authentication
    parameters:
      - description: The token identifier string
        in: path
        name: token
        required: true
        type: string
  /bank-accounts:
    get:
      description: |
        Retrieve a list of Bank Accounts
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Bank Accounts was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/BankAccount'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of bank accounts
      tags:
        - Bank Accounts
    post:
      description: |
        Create a Bank Account
      parameters:
        - description: BankAccount resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BankAccount'
      responses:
        '201':
          description: Bank Account was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/BankAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a Bank Account
      tags:
        - Bank Accounts
  '/bank-accounts/{id}':
    get:
      description: |
        Retrieve a Bank Account with specified identifier string
      responses:
        '200':
          description: BankAccount was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/BankAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Bank Account
      tags:
        - Bank Accounts
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a BankAccount with predefined identifier string
      parameters:
        - description: BankAccount resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BankAccount'
      responses:
        '200':
          description: BankAccount was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/BankAccount'
        '201':
          description: BankAccount was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/BankAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a BankAccount with predefined ID
      tags:
        - Bank Accounts
  '/bank-accounts/{id}/deactivation':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Deactivate a Bank Account
      responses:
        '201':
          description: Deactivated successful
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/BankAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Deactivate a Bank Account
      tags:
        - Bank Accounts
  /blacklists:
    get:
      description: |
        Retrieve a list of blacklists
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Blacklists was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Blacklist'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of blacklists
      tags:
        - Blacklists
    post:
      description: |
        Create a blacklist
      parameters:
        - description: Blacklist resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Blacklist'
      responses:
        '201':
          description: Blacklist was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Blacklist'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a blacklist
      tags:
        - Blacklists
  '/blacklists/{id}':
    delete:
      description: |
        Delete a blacklist with predefined identifier string
      responses:
        '204':
          description: Blacklist was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Delete a blacklist
      tags:
        - Blacklists
    get:
      description: |
        Retrieve a blacklist with specified identifier string
      responses:
        '200':
          description: Blacklist was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Blacklist'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a blacklist
      tags:
        - Blacklists
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create a blacklist with predefined identifier string
      parameters:
        - description: Blacklist resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Blacklist'
      responses:
        '201':
          description: Blacklist was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Blacklist'
        '401':
          $ref: '#/responses/AccessForbidden'
        '409':
          description: Blacklist exist and cannot be updated
          schema:
            $ref: '#/definitions/Error'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a blacklist with predefined ID
      tags:
        - Blacklists
  /checkout-pages:
    get:
      description: |
        Retrieve a list of checkout pages
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of checkout pages was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/CheckoutPage'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of checkout pages
      tags:
        - Checkout Pages
    post:
      description: |
        Create a Checkout Page
      parameters:
        - description: Checkout Page resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CheckoutPage'
      responses:
        '201':
          description: Checkout Page was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/CheckoutPage'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a Checkout Page
      tags:
        - Checkout Pages
  '/checkout-pages/{id}':
    delete:
      description: |
        Delete a Checkout Page with predefined identifier string
      responses:
        '204':
          description: Checkout Page was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Checkout page cannot be deleted
      summary: Delete a Checkout Page
      tags:
        - Checkout Pages
    get:
      description: |
        Retrieve a Checkout Page with specified identifier string
      responses:
        '200':
          description: Checkout Page was retrieved successfully
          schema:
            $ref: '#/definitions/CheckoutPage'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Checkout Page
      tags:
        - Checkout Pages
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a Checkout Page with predefined identifier string
      parameters:
        - description: Checkout Page resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CheckoutPage'
      responses:
        '200':
          description: Checkout Page was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/CheckoutPage'
        '201':
          description: Checkout Page was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/CheckoutPage'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a Checkout Page with predefined ID
      tags:
        - Checkout Pages
  /contacts:
    get:
      description: |
        Retrieve a list of contacts
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Contacts was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Contact'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of contacts
      tags:
        - Contacts
    post:
      description: |
        Create a contact
      parameters:
        - description: Contact resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        '201':
          description: Contact was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Contact'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a contact
      tags:
        - Contacts
  '/contacts/{id}':
    get:
      description: |
        Retrieve a contact with specified identifier string
      responses:
        '200':
          description: Contact was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Contact'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a contact
      tags:
        - Contacts
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a contact with predefined identifier string
      parameters:
        - description: Contact resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        '201':
          description: Contact was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Contact'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Contact exists and cannot be updated
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create or update a contact with predefined ID
      tags:
        - Contacts
  /credentials:
    get:
      description: |
        Retrieve a list of credentials
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Credentials was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Credential'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of credentials
      tags:
        - Customer Authentication
    post:
      description: |
        Create a credential
      parameters:
        - description: Credential resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Credential'
      responses:
        '201':
          description: Credential was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Credential'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a credential
      tags:
        - Customer Authentication
  '/credentials/{id}':
    delete:
      description: |
        Delete a credential with predefined identifier string
      responses:
        '204':
          description: Credential was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Delete a credential
      tags:
        - Customer Authentication
    get:
      description: |
        Retrieve a credential with specified identifier string
      responses:
        '200':
          description: Credential was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Credential'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a credential
      tags:
        - Customer Authentication
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a credential with predefined identifier string
      parameters:
        - description: Credential resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Credential'
      responses:
        '200':
          description: Credential was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Credential'
        '201':
          description: Credential was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Credential'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a credential with predefined ID
      tags:
        - Customer Authentication
  '/custom-fields/{resource}':
    get:
      description: |
        Retrieve a schema of Custom Fields for the given resource type
      responses:
        '200':
          description: A schema of Custom Fields was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            description: The list of custom fields
            items:
              $ref: '#/definitions/CustomField'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve Custom Fields
      tags:
        - Custom Fields
    parameters:
      - description: The resource type string
        enum:
          - customers
          - payment-cards
          - subscriptions
          - payments
          - websites
          - contacts
        in: path
        name: resource
        required: true
        type: string
  '/custom-fields/{resource}/{name}':
    delete:
      description: |
        Delete a custom field by its name
      responses:
        '204':
          description: Custom field has been deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: 'The field is in use: remove all the associated data first'
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a custom field
      tags:
        - Custom Fields
    get:
      description: |
        Retrieve a schema of the given Custom Field for the given resource type
      responses:
        '200':
          description: A schema of the Custom Field was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/CustomField'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Custom Field
      tags:
        - Custom Fields
    parameters:
      - description: The resource type string
        enum:
          - customers
          - payment-cards
          - subscriptions
          - payments
          - websites
          - contacts
        in: path
        name: resource
        required: true
        type: string
      - description: The custom field's identifier string
        in: path
        name: name
        required: true
        type: string
    put:
      description: |
        Create or alter a schema of the given Custom Field for the given resource type.
      parameters:
        - description: Custom Fields schema of the given resource type
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomField'
      responses:
        '200':
          description: The Custom Field was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/CustomField'
        '201':
          description: The Custom Fields was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/CustomField'
        '401':
          $ref: '#/responses/AccessForbidden'
        '409':
          description: 'The schema is in use: remove all the associated data in order to remove or alter the schema'
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or alter a Custom Field
      tags:
        - Custom Fields
  /customers:
    get:
      description: |
        Retrieve a list of customers
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
        - $ref: '#/parameters/collectionFilter'
        - $ref: '#/parameters/collectionQuery'
        - $ref: '#/parameters/collectionSort'
        - $ref: '#/parameters/collectionFields'
        - $ref: '#/parameters/collectionExpand'
      responses:
        '200':
          description: A list of Customers was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Customer'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of customers
      tags:
        - Customers
    post:
      description: |
        Create a customer
      parameters:
        - description: Customer resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '201':
          description: Customer was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Customer'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a customer
      tags:
        - Customers
  '/customers/{id}':
    get:
      description: |
        Retrieve a customer with specified identifier string
      responses:
        '200':
          description: Customer was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Customer'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a customer
      tags:
        - Customers
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create a customer with predefined identifier string
      parameters:
        - description: Customer resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: Customer was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Customer was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Customer'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a customer with predefined ID
      tags:
        - Customers
  /disputes:
    get:
      description: |
        Retrieve a list of disputes
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of disputes was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Dispute'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of disputes
      tags:
        - Disputes
    post:
      description: |
        Create a dispute
      parameters:
        - description: Dispute resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Dispute'
      responses:
        '201':
          description: Dispute was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Dispute'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a dispute
      tags:
        - Disputes
  '/disputes/{id}':
    get:
      description: |
        Retrieve a dispute with specified identifier string
      responses:
        '200':
          description: Dispute was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Dispute'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a dispute
      tags:
        - Disputes
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a Dispute with predefined identifier string
      parameters:
        - description: Dispute resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Dispute'
      responses:
        '200':
          description: Dispute was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Dispute'
        '201':
          description: Dispute was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Dispute'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a Dispute with predefined ID
      tags:
        - Disputes
  /email-credentials:
    get:
      description: |
        Retrieve a list of email credentials
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of email credentials was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/EmailCredential'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of email credentials
      tags:
        - Email Credentials
    post:
      description: Create email credential
      parameters:
        - description: EmailCredential resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EmailCredential'
      responses:
        '201':
          description: Email credential was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/EmailCredential'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create email credential
      tags:
        - Email Credentials
  '/email-credentials/{id}':
    delete:
      description: |
        Delete an email credential with predefined identifier string
      responses:
        '204':
          description: Email credential was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Delete an email credential
      tags:
        - Email Credentials
    get:
      description: |
        Retrieve email credential with specified identifier string
      responses:
        '200':
          description: Email credential was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/EmailCredential'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve email credential
      tags:
        - Email Credentials
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update email credential with predefined identifier string
      parameters:
        - description: EmailCredential resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EmailCredential'
      responses:
        '200':
          description: Email credential was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/EmailCredential'
        '201':
          description: Email credential was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/EmailCredential'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update email credential with predefined ID
      tags:
        - Email Credentials
  /forgot-password:
    post:
      description: |
        Sends an email with a link containing a token to reset user password
      parameters:
        - description: Email resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Email'
      responses:
        '204':
          description: Email sent successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Sends an email with a link containing a token to reset user password
      tags:
        - Users
  /gateway-accounts:
    get:
      description: |
        Retrieve a list of gateway accounts
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Gateway Accounts was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/GatewayAccount'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of gateway accounts
      tags:
        - Gateway Accounts
    post:
      description: |
        Create a Gateway Account
      parameters:
        - description: Gateway Account resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GatewayAccount'
      responses:
        '201':
          description: Gateway Account was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/GatewayAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a Gateway Account
      tags:
        - Gateway Accounts
  '/gateway-accounts/{id}':
    delete:
      description: |
        Delete a Gateway Account with predefined identifier string
      responses:
        '204':
          description: Gateway Account was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Delete a Gateway Account
      tags:
        - Gateway Accounts
    get:
      description: |
        Retrieve a Gateway Account with specified identifier string
      responses:
        '200':
          description: Gateway Account was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/GatewayAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Gateway Account
      tags:
        - Gateway Accounts
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a GatewayAccount with predefined identifier string
      parameters:
        - description: Gateway Account resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GatewayAccount'
      responses:
        '200':
          description: Gateway Account was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/GatewayAccount'
        '201':
          description: Gateway Account was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/GatewayAccount'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a Gateway Account with predefined ID
      tags:
        - Gateway Accounts
  /histograms/transactions:
    get:
      description: |
        Get Transaction histogram report data.
      parameters:
        - description: Report start day
          format: date-time
          in: query
          name: periodStart
          required: true
          type: string
        - description: Report end day
          format: date-time
          in: query
          name: periodEnd
          required: true
          type: string
        - description: Report aggregation field
          enum:
            - website
            - currency
            - bin
            - rebillNumber
            - transactionResult
            - transactionType
            - gatewayAccount
            - leadsAffiliate
            - leadsCampaign
            - leadsContent
            - leadsMedium
            - leadsSalesAgent
            - leadsSource
            - leadsSubAffiliate
            - leadsTerm
          in: query
          name: aggregationField
          required: true
          type: string
        - description: Report aggregation period
          enum:
            - hour
            - day
            - month
          in: query
          name: aggregationPeriod
          required: true
          type: string
        - description: Report metric
          enum:
            - ApprovalThroughput
            - AuthApprovalThroughput
            - AvgSalesPrice
            - Refunds
            - RefundCount
            - Sales
            - SalesCount
          in: query
          name: metric
          required: true
          type: string
      responses:
        '200':
          description: Transaction report was retrieved successfully.
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/HistogramData'
      summary: Get Transaction histogram report data
      tags:
        - Transaction
        - Histogram
        - Report
  /invoices:
    get:
      description: |
        Retrieve a list of invoices
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of invoices was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Invoice'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of invoices
      tags:
        - Invoices
    post:
      description: |
        Create an invoice
      parameters:
        - description: Invoice resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Invoice'
      responses:
        '201':
          description: Invoice was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create an invoice
      tags:
        - Invoices
  '/invoices/{id}':
    get:
      description: |
        Retrieve an invoice with specified identifier string
      responses:
        '200':
          description: Invoice was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve an invoice
      tags:
        - Invoices
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update an invoice with predefined identifier string
      parameters:
        - description: Invoice resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Invoice'
      responses:
        '200':
          description: Invoice was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '201':
          description: Invoice was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update an invoice with predefined ID
      tags:
        - Invoices
  '/invoices/{id}/abandon':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Abandon an invoice with specified identifier string
      responses:
        '201':
          description: Invoice was abandoned successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Abandon an invoice
      tags:
        - Invoices
  '/invoices/{id}/issue':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Issue an invoice with specified identifier string
      parameters:
        - description: InvoiceItem resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InvoiceIssue'
      responses:
        '201':
          description: Invoice was abandoned successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Issue an invoice
      tags:
        - Invoices
  '/invoices/{id}/items':
    get:
      description: |
        Retrieve an invoice items with specified invoice identifier string
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Invoice items were retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/InvoiceItem'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve invoice items
      tags:
        - Invoices
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Create an invoice item
      parameters:
        - description: InvoiceItem resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InvoiceItem'
      responses:
        '201':
          description: InvoiceItem was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/InvoiceItem'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create an invoice item
      tags:
        - Invoices
  '/invoices/{id}/void':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Void an invoice with specified identifier string
      responses:
        '201':
          description: Invoice was voided successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Void an invoice
      tags:
        - Invoices
  /layouts:
    get:
      description: |
        Retrieve a layout list
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Layout list was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Layout'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a layout list
      tags:
        - Layouts
    post:
      description: |
        Create a layout
      parameters:
        - description: Layout resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Layout'
      responses:
        '201':
          description: Layout was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Layout'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a layout
      tags:
        - Layouts
  '/layouts/{id}':
    get:
      description: |
        Retrieve a layout with specified identifier string
      responses:
        '200':
          description: Layout was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Layout'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a layout
      tags:
        - Layouts
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a layout with predefined identifier string
      parameters:
        - description: Layout resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Layout'
      responses:
        '200':
          description: Layout was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Layout'
        '201':
          description: Layout was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Layout'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create or update a layout with predefined ID
      tags:
        - Layouts
  /lead-sources:
    get:
      description: |
        Retrieve a list of Lead Sources
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of LeadSources was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/LeadSource'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of Lead Sources
      tags:
        - Lead Sources
    post:
      description: |
        Create a Lead Source
      parameters:
        - description: Lead Source resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LeadSource'
      responses:
        '201':
          description: Lead Source was created
          schema:
            $ref: '#/definitions/LeadSource'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a LeadSource
      tags:
        - Lead Sources
  '/lead-sources/{id}':
    get:
      description: |
        Retrieve a Lead Source with specified identifier string
      responses:
        '200':
          description: Lead Source was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/LeadSource'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Lead Source
      tags:
        - Lead Sources
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create a Lead Source with predefined identifier string
      parameters:
        - description: Lead Source resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LeadSource'
      responses:
        '200':
          description: Lead Source was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/LeadSource'
        '201':
          description: Lead Source was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/LeadSource'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a Lead Source with predefined ID
      tags:
        - Lead Sources
  /notes:
    get:
      description: |
        Retrieve a list of notes
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Notes was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Note'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of notes
      tags:
        - Notes
    post:
      description: |
        Create a note
      parameters:
        - description: Note resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Note'
      responses:
        '201':
          description: Note was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Note'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a note
      tags:
        - Notes
  '/notes/{id}':
    get:
      description: |
        Retrieve a note with specified identifier string
      responses:
        '200':
          description: Note was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Note'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a note
      tags:
        - Notes
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a note with predefined identifier string
      parameters:
        - description: Note resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Note'
      responses:
        '200':
          description: Note was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Note'
        '201':
          description: Note was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Note'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a note with predefined ID
      tags:
        - Notes
  /organizations:
    get:
      description: |
        Retrieve a list of organizations
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of organizations was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Organization'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of organizations
      tags:
        - Organizations
    post:
      description: |
        Create a organization
      parameters:
        - description: Organization resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Organization'
      responses:
        '201':
          description: Organization was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a organization
      tags:
        - Organizations
  '/organizations/{id}':
    delete:
      description: |
        Delete a organization with predefined identifier string
      responses:
        '204':
          description: Organization was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Organization has related resources and cannot be deleted
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a organization
      tags:
        - Organizations
    get:
      description: |
        Retrieve a organization with specified identifier string
      responses:
        '200':
          description: Organization was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a organization
      tags:
        - Organizations
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a organization with predefined identifier string
      parameters:
        - description: Organization resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Organization'
      responses:
        '200':
          description: Organization was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '201':
          description: Organization was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create or update a organization with predefined ID
      tags:
        - Organizations
  /password-tokens:
    get:
      description: |
        Retrieve a list of tokens
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Reset Password Tokens was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/ResetPasswordToken'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of tokens
      tags:
        - Customer Authentication
    post:
      description: |
        Create a Reset Password Token
      parameters:
        - description: ResetPasswordToken resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordToken'
      responses:
        '201':
          description: Reset Password Token was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ResetPasswordToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a Reset Password Token
      tags:
        - Customer Authentication
  '/password-tokens/{id}':
    delete:
      description: |
        Delete a Reset Password Token with predefined identifier string
      responses:
        '204':
          description: ResetPasswordToken was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: ResetPasswordToken has related resources and cannot be deleted
      summary: Delete a Reset Password Token
      tags:
        - Customer Authentication
    get:
      description: |
        Retrieve a Reset Password Token with specified identifier string
      responses:
        '200':
          description: ResetPasswordToken was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ResetPasswordToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Reset Password Token
      tags:
        - Customer Authentication
    parameters:
      - $ref: '#/parameters/resourceId'
  /payment-cards:
    get:
      description: |
        Retrieve a list of Payments Cards
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Payment Card was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/PaymentCard'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of Payment Cards
      tags:
        - Payment Cards
    post:
      description: |
        Create a Payment Card
      parameters:
        - description: PaymentCard resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentCard'
      responses:
        '201':
          description: Payment Card was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentCard'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a Payment Card
      tags:
        - Payment Cards
  '/payment-cards/{id}':
    get:
      description: |
        Retrieve a Payment Card with specified identifier string
      responses:
        '200':
          description: PaymentCard was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentCard'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Payment Card
      tags:
        - Payment Cards
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      parameters:
        - description: Payment card
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentCard'
      responses:
        '201':
          description: Payment card was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentCard'
        '401':
          $ref: '#/responses/AccessForbidden'
        '409':
          description: Payment card exist and cannot be updated
          schema:
            $ref: '#/definitions/Error'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a payment card with predefined ID
      tags:
        - Payment Cards
  '/payment-cards/{id}/authorization':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Authorize a Payment Card
      parameters:
        - description: Payment Card resource
          in: body
          name: body
          required: true
          schema:
            properties:
              amount:
                description: Amount
                format: double
                type: number
              currency:
                description: Currency (three letter code)
                type: string
              gatewayAccountId:
                description: The Gateway account ID
                type: string
              websiteId:
                description: The Website ID
                type: string
            required:
              - websiteId
              - currency
            type: object
      responses:
        '201':
          description: Authorization successful
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentCard'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Authorize a Payment Card
      tags:
        - Payment Cards
  '/payment-cards/{id}/deactivation':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Deactivate a Payment Card
      responses:
        '201':
          description: Authorization successful
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentCard'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Deactivate a Payment Card
      tags:
        - Payment Cards
  /payments:
    get:
      description: |
        Retrieve a payment list
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Payment list was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Payment'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a payment list
      tags:
        - Payments
    post:
      description: |
        Create a payment
      parameters:
        - description: Payment resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Payment'
      responses:
        '201':
          description: Payment was processed
          schema:
            items:
              $ref: '#/definitions/Payment'
            type: array
        '202':
          description: Payment was accepted
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/AccessForbidden'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a payment
      tags:
        - Payments
  '/payments/{id}':
    get:
      description: |
        Retrieve a payment with specified identifier string
      responses:
        '200':
          description: Payment was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a payment
      tags:
        - Payments
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Make a payment with predefined identifier string
      parameters:
        - description: Payment resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Payment'
      responses:
        '201':
          description: Payment was processed
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Payment'
            type: array
        '202':
          description: Payment was accepted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a payment with predefined ID
      tags:
        - Payments
  /plans:
    get:
      description: |
        Retrieve a list of plans
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Plans was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Plan'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of plans
      tags:
        - Plans
    post:
      description: |
        Create a plan
      parameters:
        - description: Plan resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Plan'
      responses:
        '201':
          description: Plan was created
          schema:
            $ref: '#/definitions/Plan'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a plan
      tags:
        - Plans
  '/plans/{id}':
    delete:
      description: |
        Delete a Plan with predefined identifier string
      responses:
        '204':
          description: Plan was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Delete a Plan
      tags:
        - Plans
    get:
      description: |
        Retrieve a plan with specified identifier string
      responses:
        '200':
          description: Plan was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Plan'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a plan
      tags:
        - Plans
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a Plan with predefined identifier string
      parameters:
        - description: Plan resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Plan'
      responses:
        '200':
          description: Plan was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Plan'
        '201':
          description: Plan was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Plan'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a Plan with predefined ID
      tags:
        - Plans
  /products:
    get:
      description: |
        Retrieve a list of products
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of products was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of products
      tags:
        - Products
    post:
      description: |
        Create a Product
      parameters:
        - description: Product resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: Product was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Product'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a Product
      tags:
        - Products
  '/products/{id}':
    get:
      description: |
        Retrieve a product with specified identifier string
      responses:
        '200':
          description: Product was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Product'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a product
      tags:
        - Products
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create a product with predefined identifier string
      parameters:
        - description: Product resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: Product was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Product'
        '201':
          description: Product was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Product'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Create a product with predefined ID
      tags:
        - Products
  /queue/payments:
    get:
      description: |
        Retrieve a scheduled payment list
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Successful retrieve the payments list that still waiting to be processed
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Payment'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a scheduled payment list
      tags:
        - Payments
  '/queue/payments/{id}':
    delete:
      responses:
        '204':
          description: Payment was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Payment is already handled and cannot be removed
      summary: Delete a pending payment
      tags:
        - Payments
    get:
      description: |
        Retrieve a payment with specified identifier string
      responses:
        '200':
          description: Successful retrieve the payment that still waiting to be processed
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Payment'
        '303':
          description: Payment was successfully processed and moved out from queue
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a scheduled payment
      tags:
        - Payments
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      parameters:
        - description: Payment resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Payment'
      responses:
        '200':
          description: Payment was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Payment is already handled and cannot be updated
        '422':
          $ref: '#/responses/InvalidDataError'
      summary: Update pending payment
      tags:
        - Payments
  '/queue/payments/{id}/cancel':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Cancel a scheduled payment with specified identifier string
      responses:
        '201':
          description: Successful cancel the payment
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Cancel a scheduled payment
      tags:
        - Payments
  /reports/disputes:
    get:
      description: |
        Retrieve a disputes report
      parameters:
        - description: Report will be aggregated by this field
          enum:
            - website
            - processor
            - currency
            - bin
            - country
            - rebillNumber
            - dunningIndex
            - gatewayAccount
          in: query
          name: aggregationField
          required: true
          type: string
        - description: Report month
          in: query
          name: periodMonth
          required: true
          type: string
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ReportDisputes'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a disputes report
      tags:
        - Reports
  /reports/dunning:
    get:
      description: |
        Retrieve a dunning report
      parameters:
        - description: Report start date
          format: date-time
          in: query
          name: periodStart
          required: true
          type: string
        - description: Report end date
          format: date-time
          in: query
          name: periodEnd
          required: true
          type: string
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ReportDunning'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a dunning report
      tags:
        - Reports
  /reports/retention-percentage:
    get:
      description: |
        Retrieve a retention percentage report
      parameters:
        - description: Report aggregation field
          enum:
            - day
            - month
            - quarter
            - year
          in: query
          name: aggregationField
          required: true
          type: string
        - description: Report aggregation period
          enum:
            - day
            - month
            - quarter
            - year
            - cycle
          in: query
          name: aggregationPeriod
          required: true
          type: string
        - description: If to include switched subscriptions
          in: query
          name: includeSwitchedSubscriptions
          type: string
        - description: Report start date
          in: query
          name: periodStart
          required: true
          type: string
        - description: Report end date
          in: query
          name: periodEnd
          required: true
          type: string
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/HistogramData'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a retention percentage report
      tags:
        - Reports
  /reports/retention-value:
    get:
      description: |
        The retention value report shows the count of new customers
        per aggregation bucket and the corresponding per customer value over time.
      parameters:
        - description: Report aggregation field
          enum:
            - day
            - month
            - quarter
            - year
            - leadsSource
            - leadsMedium
            - leadsCampaign
            - leadsContent
            - leadsTerm
            - leadsAffiliate
            - leadsSubAffiliate
            - leadsSalesAgent
          in: query
          name: aggregationField
          required: true
          type: string
        - description: Report aggregation period
          enum:
            - day
            - month
            - quarter
            - year
            - cycle
          in: query
          name: aggregationPeriod
          required: true
          type: string
        - description: If to include refunds
          in: query
          name: includeRefunds
          type: string
        - description: If to include disputes
          in: query
          name: includeDisputes
          type: string
        - description: Report start date
          in: query
          name: periodStart
          required: true
          type: string
        - description: Report end date
          in: query
          name: periodEnd
          required: true
          type: string
        - description: Lead Source mode
          enum:
            - last
            - all
          in: query
          name: leadSourceMode
          type: string
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/HistogramData'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a retention value report
      tags:
        - Reports
  /reports/statistics:
    get:
      description: |
        Retrieve a statistics report
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ReportStatistics'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a statistics report
      tags:
        - Reports
  /reports/subscribers:
    get:
      description: |
        Retrieve a subscribers report
      parameters:
        - description: Filter by website ID
          in: query
          name: websiteId
          type: string
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ReportSubscribers'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a subscribers report
      tags:
        - Reports
  /reports/transactions:
    get:
      description: |
        Retrieve a transactions report
      parameters:
        - description: Report start day
          format: date-time
          in: query
          name: periodStart
          required: true
          type: string
        - description: Report end day
          format: date-time
          in: query
          name: periodEnd
          required: true
          type: string
        - description: Report aggregation field
          enum:
            - website
            - currency
            - bin
            - rebillNumber
            - transactionResult
            - transactionType
            - gatewayAccount
            - leadsAffiliate
            - leadsCampaign
            - leadsContent
            - leadsMedium
            - leadsSalesAgent
            - leadsSource
            - leadsSubAffiliate
            - leadsTerm
          in: query
          name: aggregationField
          required: true
          type: string
        - description: Report metric
          enum:
            - ApprovalThroughput
            - AuthApprovalThroughput
            - AvgSalesPrice
            - Refunds
            - RefundCount
            - Sales
            - SalesCount
          in: query
          name: metric
          required: true
          type: string
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Report was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ReportTransactions'
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a transactions report
      tags:
        - Reports
  /sessions:
    get:
      description: |
        Retrieve a list of sessions
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Sessions was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Session'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of sessions
      tags:
        - Sessions
    post:
      description: |
        Create a session
      parameters:
        - description: Sessions resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Session'
      responses:
        '201':
          description: Session was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Session'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a session
      tags:
        - Sessions
  '/sessions/{id}':
    delete:
      description: |
        Delete a Session with predefined identifier string
      responses:
        '204':
          description: Session was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Session has related resources and cannot be deleted
      summary: Delete a Session
      tags:
        - Sessions
    get:
      description: |
        Retrieve a Session with specified identifier string
      responses:
        '200':
          description: Session was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Session'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Session
      tags:
        - Sessions
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a Session with predefined identifier string
      parameters:
        - description: Session resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Session'
      responses:
        '200':
          description: Session was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Session'
        '201':
          description: Session was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Session'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a Session with predefined ID
      tags:
        - Sessions
  /signin:
    post:
      description: |
        Create a session with email and password
      parameters:
        - description: Signin resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Signin'
      responses:
        '201':
          description: Session was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Session'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      security: []
      summary: Create a session with email and password
      tags:
        - Users
        - Sessions
  /signup:
    post:
      description: |
        Creates a new user and sends an email confirmation
      parameters:
        - description: Signup resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Signup'
      responses:
        '201':
          description: User was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Creates a new user and sends an email confirmation
      tags:
        - Users
  /status:
    get:
      description: |
        Retrieve API current status
      responses:
        '200':
          description: Status was received
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Status'
      security: []
      summary: Retrieve API current status
      tags:
        - Status
  /subscriptions:
    get:
      description: |
        Retrieve a list of subscriptions
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of subscriptions was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Subscription'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of subscriptions
      tags:
        - Subscriptions
    post:
      description: |
        Create a subscription
      parameters:
        - description: Subscription resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Subscription'
      responses:
        '201':
          description: Subscription was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a subscription
      tags:
        - Subscriptions
  '/subscriptions/{id}':
    get:
      description: |
        Retrieve a subscription with specified identifier string
      responses:
        '200':
          description: Subscription was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a subscription
      tags:
        - Subscriptions
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a subscription with predefined identifier string
      parameters:
        - description: Subscription resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Subscription'
      responses:
        '200':
          description: Subscription was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '201':
          description: Subscription was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a subscription with predefined ID
      tags:
        - Subscriptions
  '/subscriptions/{id}/cancel':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Cancel a subscription
      parameters:
        - description: Only policy
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SubscriptionCancel'
      responses:
        '201':
          description: Subscription was switched
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Cancel a subscription
      tags:
        - Subscriptions
  '/subscriptions/{id}/switch':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Switch a subscription
      parameters:
        - description: SubscriptionSwitch resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SubscriptionSwitch'
      responses:
        '201':
          description: Subscription was switched
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Switch a subscription
      tags:
        - Subscriptions
  /tax-categories:
    get:
      description: |
        Retrieve a list of tax categories
      responses:
        '200':
          description: A list of tax categories was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/TaxCategory'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of tax categories
      tags:
        - Taxes
  /tokens:
    get:
      description: |
        Retrieve a list of tokens
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of tokens was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/PaymentToken'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of tokens
      tags:
        - Payment Tokens
    post:
      description: |
        Create a token
      parameters:
        - description: PaymentToken resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentToken'
      responses:
        '201':
          description: Token was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      security:
        - RebAuth: []
      summary: Create a payment token
      tags:
        - Payment Tokens
  '/tokens/{token}':
    get:
      description: |
        Retrieve a token with specified identifier string
      responses:
        '200':
          description: Token was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      security:
        - RebAuth: []
      summary: Retrieve a token
      tags:
        - Payment Tokens
    parameters:
      - description: The token identifier string
        in: path
        name: token
        required: true
        type: string
  '/tokens/{token}/expiration':
    parameters:
      - description: The token identifier string
        in: path
        name: token
        required: true
        type: string
    post:
      description: |
        Expire a token
      parameters:
        - description: PaymentToken resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentToken'
      responses:
        '201':
          description: Token expiration successful
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/PaymentToken'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Expire a token
      tags:
        - Payment Tokens
  /tracking/api:
    get:
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Tracking API logs was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/ApiTracking'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of tracking API logs
      tags:
        - Tracking
  '/tracking/api/{id}':
    get:
      responses:
        '200':
          description: Tracking API log was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/ApiTracking'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a tracking API log with specified identifier string
      tags:
        - Tracking
    parameters:
      - $ref: '#/parameters/resourceId'
  /tracking/subscriptions:
    get:
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Tracking subscription logs was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/SubscriptionTracking'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of tracking subscription logs
      tags:
        - Tracking
  '/tracking/subscriptions/{id}':
    get:
      responses:
        '200':
          description: Tracking subscription log was retrieved successfully
          schema:
            $ref: '#/definitions/SubscriptionTracking'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a tracking subscription log with specified identifier string
      tags:
        - Tracking
    parameters:
      - $ref: '#/parameters/resourceId'
  /tracking/website-webhooks:
    get:
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: Tracking webhook notifications was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/WebsiteWebhookTracking'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of tracking webhook notifications
      tags:
        - Tracking
  '/tracking/website-webhooks/{id}':
    get:
      responses:
        '200':
          description: Tracking webhook notification was retrieved successfully
          schema:
            $ref: '#/definitions/WebsiteWebhookTracking'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a tracking webhook notification with specified identifier string
      tags:
        - Tracking
    parameters:
      - $ref: '#/parameters/resourceId'
  /transactions:
    get:
      description: |
        Retrieve a list of transactions
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
        - $ref: '#/parameters/collectionFilter'
        - $ref: '#/parameters/collectionSort'
      responses:
        '200':
          description: A list of transactions was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Transaction'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of transactions
      tags:
        - Transactions
  '/transactions/{id}':
    get:
      description: |
        Retrieve a Transaction with specified identifier string
      responses:
        '200':
          description: Transaction was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a Transaction
      tags:
        - Transactions
    parameters:
      - $ref: '#/parameters/resourceId'
  '/transactions/{id}/refund':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Refund a Transaction with specified identifier string.
        Note that the refund will be in the same currency as the original transaction.
      parameters:
        - description: Transaction resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransactionRefund'
      responses:
        '201':
          description: Transaction was refunded successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Refund a Transaction
      tags:
        - Transactions
  /users:
    get:
      description: |
        Retrieve a list of users
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of users was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of users
      tags:
        - Users
    post:
      description: |
        Create an user
      parameters:
        - description: User resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create an user
      tags:
        - Users
  '/users/{id}':
    delete:
      description: |
        Delete user with predefined identifier string
      responses:
        '204':
          description: User was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
          description: User has related resources and cannot be deleted
      summary: Delete user
      tags:
        - Users
    get:
      description: |
        Retrieve user with specified identifier string
      responses:
        '200':
          description: User was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve user
      tags:
        - Users
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update user with predefined identifier string
      parameters:
        - description: User resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '201':
          description: User was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/InvalidDataError'
          description: Invalid data was sent
      summary: Create or update user with predefined ID
      tags:
        - Users
  '/users/{id}/password':
    parameters:
      - $ref: '#/parameters/resourceId'
    post:
      description: |
        Updates user's password with the specified newPassword. And checks if currentPassword matches the actual one.
      parameters:
        - description: currentPassword and newPassword
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePassword'
      responses:
        '201':
          description: Password updated successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/InvalidDataError'
          description: Invalid data was sent
      summary: Updates user's password with the specified newPassword
      tags:
        - Users
  '/users/{id}/reset-password/{token}':
    parameters:
      - $ref: '#/parameters/resourceId'
      - description: The token string
        in: path
        name: token
        required: true
        type: string
    post:
      description: |
        Reset user password
      parameters:
        - description: ResetPassword resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetPassword'
      responses:
        '201':
          description: Password was reseted successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/User'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Reset user password
      tags:
        - Users
  /websites:
    get:
      description: |
        Retrieve a list of websites
      parameters:
        - $ref: '#/parameters/collectionLimit'
        - $ref: '#/parameters/collectionOffset'
      responses:
        '200':
          description: A list of Websites was retrieved successfully
          headers:
            Pagination-Limit:
              description: Items per page limit
              type: integer
            Pagination-Offset:
              description: Pagination offset
              type: integer
            Pagination-Total:
              description: Total items count
              type: integer
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            items:
              $ref: '#/definitions/Website'
            type: array
        '401':
          $ref: '#/responses/AccessForbidden'
      summary: Retrieve a list of websites
      tags:
        - Websites
    post:
      description: |
        Create a website
      parameters:
        - description: Website resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Website'
      responses:
        '201':
          description: Website was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Website'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create a website
      tags:
        - Websites
  '/websites/{id}':
    delete:
      description: |
        Delete a website with predefined identifier string
      responses:
        '204':
          description: Website was deleted
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Website has related resources and cannot be deleted
      summary: Delete a website
      tags:
        - Websites
    get:
      description: |
        Retrieve a website with specified identifier string
      responses:
        '200':
          description: Website was retrieved successfully
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Website'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a website
      tags:
        - Websites
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a website with predefined identifier string
      parameters:
        - description: Website resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Website'
      responses:
        '200':
          description: Website was updated
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Website'
        '201':
          description: Website was created
          headers:
            Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            Rate-Limit-Reset:
              description: |
                The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
                when the current period will reset
              type: string
          schema:
            $ref: '#/definitions/Website'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a website with predefined ID
      tags:
        - Websites
  '/websites/{id}/webhook':
    get:
      description: |
        Retrieve a webhook for website with specified identifier string
      responses:
        '200':
          description: Webhook was retrieved successfully
          schema:
            $ref: '#/definitions/WebsiteWebhook'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
      summary: Retrieve a webhook for website
      tags:
        - Websites
    parameters:
      - $ref: '#/parameters/resourceId'
    put:
      description: |
        Create or update a webhook for website with predefined identifier string
      parameters:
        - description: Webhook resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/WebsiteWebhook'
      responses:
        '200':
          description: Webhook was updated
          schema:
            $ref: '#/definitions/WebsiteWebhook'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Invalid data was sent
          schema:
            $ref: '#/definitions/InvalidError'
      summary: Create or update a webhook for website with predefined ID
      tags:
        - Websites
definitions:
  AmountAdjustment:
    discriminator: amountPolicy
    properties:
      amountPolicy:
        enum:
          - full-price
          - partial-amount
          - rate-discount
        type: string
    required:
      - amountPolicy
    type: object
  ApiKey:
    description: API secret Key.
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The API key created time
      datetimeFormat:
        default: iso8601
        description: Date time format
        enum:
          - mysql
          - iso8601
        type: string
      description:
        description: API key description
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        readOnly: true
      secretKey:
        description: API secret key's value
        readOnly: true
        type: string
      userName:
        description: API user name
        readOnly: true
        type: string
    type: object
  ApiTracking:
    description: Tracking API Requests.
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The log created time
      duration:
        description: Request duration in milliseconds
        type: integer
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
      ipAddress:
        description: Client IP address
        format: ipv4
        type: string
      method:
        description: HTTP method
        enum:
          - HEAD
          - GET
          - POST
          - PUT
          - DELETE
        type: string
      request:
        description: Request JSON-string
        type: string
      response:
        description: Response JSON-string
        type: string
      status:
        description: HTTP response code
        type: integer
      url:
        description: API request address
        type: string
    readOnly: true
    type: object
  AuthenticationOptions:
    properties:
      authTokenTtl:
        description: The default lifetime of the auth-token in seconds
        type: integer
      credentialTtl:
        description: The default lifetime of the credential in seconds
        type: integer
      passwordPattern:
        description: Allowed password pattern
        type: string
      resetTokenTtl:
        description: The default lifetime of the reset-token in seconds
        type: integer
    type: object
  AuthenticationToken:
    properties:
      _links:
        $ref: '#/definitions/Links'
      credentialId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The credential's ID
        readOnly: true
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The token's customer ID
        readOnly: true
      expiredTime:
        description: Token's expired time
        format: date-time
        type: string
      password:
        description: The token's password (write-only)
        format: password
        type: string
      token:
        description: The token identifier string
        readOnly: true
        type: string
      username:
        description: The token's username
        type: string
    required:
      - username
      - password
    type: object
  BankAccount:
    properties:
      _links:
        $ref: '#/definitions/Links'
      accountNumber:
        description: Bank's Account Number. Required if bank account is not created from Token
        type: string
      accountType:
        description: Banks's Account type. Required if bank account is not created from Token
        type: string
      bankName:
        description: Bank's name.
        type: string
      contactId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The Contact ID. Required if bank account is not created from Token
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Bank Account created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The Customer's ID.
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The bank account identifier string
        readOnly: true
      routingNumber:
        description: Bank's Routing Number. Required if bank account is not created from Token
        type: string
      status:
        description: Bank Account status
        enum:
          - active
          - deactivated
        type: string
      token:
        description: Bank Account Token. Use without any other fields
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Bank Account updated time
    type: object
  Blacklist:
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The blacklist created time
      expireTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The blacklist expire time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The blacklist identifier string
        readOnly: true
      ttl:
        description: The blacklist time to live
        minimum: 30
        type: integer
      type:
        description: The blacklist type
        enum:
          - payment-card-id
          - customer-id
          - email
          - ip-address
          - country
          - fingerprint
          - bin
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The blacklist updated time
      value:
        description: The blacklist value
        type: string
    required:
      - type
      - value
    type: object
  CheckoutPage:
    properties:
      _links:
        $ref: '#/definitions/Links'
      allowCustomCustomerId:
        description: If to enable your own customer ID in requests
        type: boolean
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Checkout page identifier string
        readOnly: true
      isActive:
        description: If checkout page active
        type: boolean
      name:
        description: Checkout page name
        type: string
      planId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Checkout page plan ID
        type: string
      redirectTimeout:
        description: Checkout page redirect timeout
        type: integer
      redirectUrl:
        description: Checkout page url
        type: string
      uriPath:
        description: 'Your own custom uri path for this Checkout Page. It will be appended to checkout url https://checkout.rebilly.com/website/<uriPath>'
        type: string
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Checkout page website ID
        type: string
    required:
      - name
      - planId
      - websiteId
      - uriPath
    type: object
  Condition:
    discriminator: op
    properties:
      op:
        description: The condition operation
        enum:
          - and
          - or
          - not
          - between
          - equals
          - in
          - gt
          - gte
          - lt
          - lte
        type: string
    required:
      - op
    type: object
  Contact:
    properties:
      _links:
        $ref: '#/definitions/Links'
      address:
        description: The contact street address
        maxLength: 60
        type: string
      address2:
        description: The contact street address (second line)
        maxLength: 60
        type: string
      city:
        description: The contact city
        maxLength: 45
        type: string
      country:
        description: The contact country ISO Alpha-2 code
        pattern: '^[A-Z]{2}$'
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The contact created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The contact customer ID
      firstName:
        description: The contact first name
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The contact identifier string
        readOnly: true
      lastName:
        description: The contact last name
        type: string
      organization:
        description: The contact organization
        type: string
      phoneNumber:
        description: The contact phone number
        type: string
      postalCode:
        description: The contact postal code
        maxLength: 10
        type: string
      region:
        description: The contact region (state)
        maxLength: 45
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The contact updated time
    type: object
  Credential:
    properties:
      _links:
        $ref: '#/definitions/Links'
      customerId:
        description: The credential's customer ID
        type: string
      expiredTime:
        description: The credential's expired time
        format: date-time
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The credential identifier string
        readOnly: true
      password:
        description: The credential's password
        format: password
        type: string
      username:
        description: Credential's username
        type: string
    required:
      - username
      - password
      - customerId
    type: object
  CustomField:
    description: A separate Custom Field schema
    properties:
      additionalSchema:
        description: |
          Additional parameters which can be added according to type:
          Parameter Name | Types         | Description
          -------------- | ------------- | -------------
          allowedValues  | string, array | List of allowed values
      description:
        description: The custom field description
        type: string
      name:
        description: The name of the custom field
        type: string
      type:
        description: |
          Type value    | Description
          ------------- | -------------
          array         | An array of strings up to 255 characters, maximum size is 1000 elements
          boolean       | true or false
          date          | String of format "full-date" (YYYY-MM-DD) from RFC-3339 (full-date)
          datetime      | String of format "date-time" (YYYY-MM-DDTHH:MM:SSZ) from RFC-3339 (date-time)
          integer       | Cardinal value of -2^31..2^31-1
          number        | Float value. It can take cardinal values also which are interpreted as float
          string        | Regular string up to 255 characters
          monetary      | A map of 3-letters currency code and amount, e.g. {"currency": "EUR", "amount": 25.30}
        enum:
          - array
          - boolean
          - datetime
          - integer
          - number
          - string
          - monetary
        type: string
    required:
      - name
      - type
    type: object
  Customer:
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The customer created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      defaultCardId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The customer default card ID
      email:
        description: The customer email
        format: email
        maxLength: 100
        type: string
      firstName:
        description: The customer first name
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The customer identifier string
        readOnly: true
      ipAddress:
        description: The customer IP
        format: ipv4
        type: string
      lastName:
        description: The customer last name
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The customer updated time
    type: object
  DayOfWeek:
    enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    type: string
  Dispute:
    properties:
      _links:
        $ref: '#/definitions/Links'
      acquirerReferenceNumber:
        description: The dispute's acquirer reference number
        type: string
      amount:
        description: The dispute amount
        format: double
        type: number
      category:
        description: The dispute's category
        enum:
          - fraud
          - unrecognized
          - product-not-received
          - product-unacceptable
          - product-not-refunded
          - duplicate
          - subscription-canceled
          - uncategorized
        readOnly: true
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Dispute created time
      currency:
        description: The dispute currency ISO Alpha code
        type: string
      customerId:
        description: The dispute's customer ID
        readOnly: true
        type: string
      deadlineTime:
        description: Dispute deadline time
        format: date-time
        type: string
      evidence:
        allOf:
          - $ref: '#/definitions/DisputeEvidence'
      evidenceSubmissionTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Dispute evidence submission time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The dispute identifier string
        readOnly: true
      postedTime:
        description: Dispute posted time
        format: date-time
        type: string
      rawResponse:
        description: Dispute raw response from gateway
        readOnly: true
        type: string
      reasonCode:
        description: The dispute's reason code
        enum:
          - 1000
          - 12
          - 2
          - 30
          - 31
          - 35
          - 37
          - 40
          - 41
          - 42
          - 46
          - 47
          - 49
          - 50
          - 53
          - 54
          - 55
          - 57
          - 59
          - 60
          - 62
          - 7
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
          - 79
          - 8
          - 80
          - 81
          - 82
          - 83
          - 85
          - 86
          - 93
          - 0
          - 63
          - A01
          - A02
          - A08
          - F10
          - F14
          - F22
          - F24
          - F29
          - C02
          - C04
          - C05
          - C08
          - C14
          - C18
          - C28
          - C31
          - C32
          - M10
          - M49
          - P01
          - P03
          - P04
          - P05
          - P07
          - P08
          - P22
          - P23
          - R03
          - R13
          - M01
          - FR1
          - FR4
          - FR6
          - AL
          - AP
          - AW
          - CA
          - CD
          - CR
          - DA
          - DP
          - DP1
          - EX
          - IC
          - IN
          - IS
          - LP
          - 'N'
          - NA
          - NC
          - P
          - RG
          - RM
          - RN1
          - RN2
          - SV
          - TF
          - TNM
          - UA01
          - UA02
          - UA32
          - UA99
          - UA03
          - UA10
          - UA11
          - UA12
          - UA18
          - UA20
          - UA21
          - UA22
          - UA23
          - UA28
          - UA30
          - UA31
          - UA38
        type: string
      resolvedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Dispute resolved time
      status:
        description: The dispute's status
        enum:
          - response-needed
          - under-review
          - forfeited
          - won
          - lost
        type: string
      transactionId:
        description: The dispute's transaction ID
        type: string
      type:
        description: The dispute's type
        enum:
          - information-request
          - first-chargeback
          - second-chargeback
          - arbitration
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Dispute updated time
    type: object
  DisputeEvidence:
    properties:
      accessLogs:
        description: The id of a file upload with the access logs showing the customer activity.
        type: string
      additionalFile:
        description: Any additional evidence as a file upload id.
        type: string
      customerCommunication:
        description: The id of a file upload showing communication with the customer (for example emails).
        type: string
      customerSignature:
        description: The id of a file upload showing the signed contract or signed delivery receipt.
        type: string
      deliveryProof:
        description: The id of a file upload showing the proof of delivery.
        type: string
      explanation:
        description: An explanation relevant to the category of dispute.
        type: string
      policy:
        description: 'The id of a file upload with the policy materials (may include the cancellation policy, refund policy, and terms of use).'
        type: string
    type: object
  Dunning:
    properties:
      afterAttemptPolicy:
        description: The policy on the attempt finishes
        enum:
          - none
          - change-renewal-time
        type: string
      afterDunningEndPolicy:
        description: The policy on the dunning ends
        enum:
          - none
          - cancel-subscription
        type: string
      attempts:
        items:
          properties:
            paymentInstruction:
              $ref: '#/definitions/AmountAdjustment'
            scheduleInstruction:
              $ref: '#/definitions/ScheduleMethod'
          required:
            - scheduleInstruction
            - paymentInstruction
          type: object
        minItems: 1
        type: array
    required:
      - attempts
      - afterAttemptPolicy
      - afterDunningEndPolicy
    type: object
  Email:
    properties:
      email:
        description: Email
        format: email
        type: string
    required:
      - email
    type: object
  EmailCredential:
    properties:
      _links:
        $ref: '#/definitions/Links'
      authenticationMethod:
        description: Credential's authentication method
        enum:
          - none
          - plain
          - login
          - cram-md5
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Credential's created time
      encryptionMethod:
        description: Credential's encryption method
        enum:
          - none
          - tls
          - ssl
        type: string
      host:
        description: Credential's host
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Credential's identifier string
        readOnly: true
      password:
        description: Credential's password
        format: password
        type: string
      port:
        description: Credential's port
        maximum: 65535
        minimum: 0
        type: integer
      senderEmail:
        description: Credential's sender email address
        format: email
        type: string
      senderName:
        description: Credential's sender name
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Credential's updated time
      username:
        description: Credential's username
        type: string
    required:
      - senderName
      - senderEmail
      - host
      - port
      - username
      - password
    type: object
  Error:
    properties:
      error:
        type: string
      status:
        maximum: 600
        minimum: 100
        type: integer
    type: object
  GatewayAccount:
    properties:
      _links:
        $ref: '#/definitions/Links'
      acceptedCurrencies:
        description: Accepted currencies (array of the currency three letter code)
        items:
          type: string
        type: array
      acquirerName:
        description: Acquirer name
        type: string
      city:
        description: The gateway's city field
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Gateway Account created time
      dccMarkup:
        description: Dynamic currency conversion markup in basis points
        maximum: 10000
        minimum: 1
        type: integer
      descriptor:
        description: The gateway's desciptor
        type: string
      downtimeEnd:
        description: Gateway downtime end
        format: date-time
        type: string
      downtimeStart:
        description: Gateway downtime start
        format: date-time
        type: string
      dynamicDescriptor:
        description: 'True, if Gateway Account allows dynamic descriptor'
        type: boolean
      gatewayConfig:
        description: Gateway config. Fields depends on gatewayName
        type: object
      gatewayName:
        description: The gateway name
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The gateway identifier string
        readOnly: true
      merchantCategoryCode:
        description: The gateway's merchant category code
        maximum: 9950
        minimum: 742
        type: integer
      method:
        $ref: '#/definitions/Method'
        description: Payment Method
      monthlyLimit:
        description: Monthly Limit
        format: double
        minimum: 0
        type: integer
      organizationId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Organization ID
      paymentCardSchemes:
        description: Accepted payment card brands
        items:
          enum:
            - Visa
            - MasterCard
            - American Express
            - Discover
            - Maestro
            - Solo
            - Electron
            - JCB
            - Voyager
            - Diners Club
            - Switch
            - Laser
            - China Unionpay
          type: string
        type: array
      status:
        description: The gateway's status
        enum:
          - active
          - inactive
          - pending
        readOnly: true
        type: string
      threeDSecure:
        description: 'True, if Gateway Account allows 3DSecure'
        type: boolean
      threeDSecureType:
        description: Type of 3DSecure
        enum:
          - integrated
          - external
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Gateway Account updated time
      websites:
        description: Websites IDs
        items:
          allOf:
            - $ref: '#/definitions/ResourceId'
          description: Website ID
        type: array
    required:
      - gatewayName
      - merchantCategoryCode
      - websites
      - acquirerName
      - acceptedCurrencies
      - organizationId
    type: object
  HistogramData:
    properties:
      data:
        items:
          description: Contains date-time and value
          properties:
            date:
              description: Entry date-time
              type: string
            value:
              description: Entry value
              type: number
          readOnly: true
          type: object
        type: array
    type: object
  InvalidError:
    allOf:
      - $ref: '#/definitions/Error'
      - properties:
          details:
            items:
              type: string
            type: array
        type: object
  Invoice:
    properties:
      _links:
        $ref: '#/definitions/Links'
      abandonedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Invoice abandoned time
      amount:
        description: The Invoice's amount
        format: double
        readOnly: true
        type: number
      billingContactId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Invoice's billing contact ID
      closedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Invoice closed time
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Invoice created time
      currency:
        description: The currency three letter code
        type: string
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The customer's ID
      deliveryContactId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Invoice's delivery contact ID
      dueTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Invoice due time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The invoice identifier string
        readOnly: true
      issuedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Invoice issued time
      items:
        description: Invoice items array
        items:
          type: string
        readOnly: true
        type: array
      voidedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Invoice voided time
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The website's ID
    required:
      - customerId
      - websiteId
      - currency
    type: object
  InvoiceIssue:
    properties:
      issueTime:
        format: date-time
        type: string
    type: object
  InvoiceItem:
    properties:
      _links:
        $ref: '#/definitions/Links'
      description:
        description: Invoice item's description
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The website identifier string
        readOnly: true
      periodEndTime:
        description: End time
        format: date-time
        type: string
      periodStartTime:
        description: Start time
        format: date-time
        type: string
      quantity:
        description: Invoice item's quantity
        type: integer
      type:
        description: Invoice item's type
        enum:
          - debit
          - credit
        type: string
      unitPrice:
        description: Invoice item's price
        format: double
        type: number
    required:
      - type
      - unitPrice
    type: object
  Layout:
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdBy:
        description: The process that created this layout
        readOnly: true
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Layout created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The layout identifier string
        readOnly: true
      items:
        description: The array of layout items (planId and starred)
        items:
          $ref: '#/definitions/LayoutItem'
        type: array
      name:
        description: The name of the layout string
        type: string
      updatedBy:
        description: The process that updated this layout
        readOnly: true
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Layout updated time
    required:
      - name
    type: object
  LayoutItem:
    properties:
      order:
        description: Item's order in Layout
        readOnly: true
        type: integer
      planId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The plan identifier string
      starred:
        description: Boolean if the plan should be starred (special callout presentation)
        type: boolean
    type: object
  LeadSource:
    properties:
      _links:
        $ref: '#/definitions/Links'
      affiliate:
        description: 'Lead Source''s affiliate (eg 123, Bob Smith)'
        type: string
      amount:
        description: The amount that the lead cost
        format: double
        type: number
      campaign:
        description: Lead Source's campaign (eg go-big-123)
        type: string
      clickId:
        description: Lead Source's click id (may come from an ad server)
        type: string
      content:
        description: Lead Source's content (eg smiley faces)
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: LeadSource created time
      currency:
        description: 'Currency (three letter ISO 4217 alpha code) (eg USD, EUR)'
        type: string
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Customer ID
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The lead source identifier string
        readOnly: true
      ipAddress:
        description: Customer's IP Address
        type: string
      medium:
        description: 'Lead Source''s medium (eg search, display)'
        type: string
      path:
        description: Lead Source's path uri (eg www.example.com/some/landing/path)
        type: string
      salesAgent:
        description: Lead Source's sales agent (eg James Bond)
        type: string
      source:
        description: 'Lead Source''s source (eg google, yahoo)'
        type: string
      subAffiliate:
        description: Lead Source's sub-affiliate also called a sub-id or click id in some circles (eg 123456)
        type: string
      term:
        description: Lead Source's term (eg salt shakers)
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: LeadSource updated time
    required:
      - customerId
    type: object
  Link:
    properties:
      href:
        description: The link URL
        type: string
      rel:
        description: The link type
        enum:
          - self
        type: string
    required:
      - rel
      - href
    type: object
  Links:
    description: The links related to resource
    items:
      $ref: '#/definitions/Link'
    readOnly: true
    type: array
  Method:
    description: The payment method
    enum:
      - ach
      - cash
      - china-unionpay
      - payment-card
      - paypal
    type: string
  Note:
    properties:
      _links:
        $ref: '#/definitions/Links'
      archived:
        description: Is the note archived (excluded from List method)
        type: boolean
      archivedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Note archived time
      content:
        description: The note's name
        type: string
      createdBy:
        description: The note's creator
        readOnly: true
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Note created time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The note identifier string
        readOnly: true
      relatedId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The note's related resource ID
      relatedType:
        description: The note's related resource type
        enum:
          - customer
          - payment-card
          - payment-gateway
          - subscription
          - transaction
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Note updated time
    required:
      - content
      - relatedType
      - relatedId
    type: object
  Organization:
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Links'
        description: The links related to organization
      address:
        description: The organization street address
        maxLength: 60
        type: string
      address2:
        description: The organization street address
        maxLength: 60
        type: string
      city:
        description: The organization city
        maxLength: 45
        type: string
      country:
        description: The organization country ISO Alpha-2 code
        pattern: '^[A-Z]{2}$'
        type: string
      createdTime:
        $ref: '#/definitions/ServerTimestamp'
        description: The organization created time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The organization identifier string
        readOnly: true
      name:
        description: The organization name
        maxLength: 60
        type: string
      postalCode:
        description: The organization postal code
        maxLength: 10
        type: string
      region:
        description: The organization region (state)
        maxLength: 45
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The organization updated time
    required:
      - name
    type: object
  Payment:
    discriminator: method
    properties:
      _links:
        $ref: '#/definitions/Links'
      amount:
        description: The payment amount
        format: double
        type: integer
      createdBy:
        description: The process that created this payment
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Payment created time
      currency:
        description: The payment currency ISO Alpha code
        type: string
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The customer identifier string
      declineInstructions:
        description: Dunning instructions object for payment declines
        properties:
          dunning:
            $ref: '#/definitions/Dunning'
          dunningIndex:
            description: The position in the sequence of dunning
            readOnly: true
            type: integer
        type: object
      description:
        description: The payment description
        maxLength: 255
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The payment identifier string
        readOnly: true
      invoiceIds:
        description: The array of invoice identifiers
        items:
          $ref: '#/definitions/ResourceId'
        type: array
      method:
        $ref: '#/definitions/Method'
        description: Payment Method
      result:
        description: Payment result
        enum:
          - approved
          - declined
          - canceled
          - unknown
        readOnly: true
        type: string
      scheduledTime:
        description: The time the payment is scheduled for collection
        format: date-time
        type: string
      status:
        description: Payment status
        enum:
          - scheduled
          - queued
          - in-progress
          - incomplete
          - waiting-gateway
          - suspended
          - completed
        readOnly: true
        type: string
      updatedBy:
        description: The process that updated this payment
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Payment updated time
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The website identifier string
    required:
      - websiteId
      - customerId
      - currency
      - amount
      - method
    type: object
  PaymentCard:
    properties:
      _links:
        $ref: '#/definitions/Links'
      billingContactId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The Billing Contact ID. Required if card is creating not from Token
      bin:
        description: The card's bin (the PAN's first 6 digits)
        readOnly: true
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Card created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The Customer's ID. Required if card is creating not from Token
      cvv:
        description: Card's cvv (card verification value). Required if card is creating not from Token
        type: string
      expMonth:
        description: Card's expiry month. Required if card is creating not from Token
        type: integer
      expYear:
        description: Card's expiry year. Required if card is creating not from Token
        type: integer
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The card identifier string
        readOnly: true
      last4:
        description: The PAN's last 4 digits
        readOnly: true
        type: string
      pan:
        description: The card PAN (Primary Account Number). Required if card is creating not from Token
        type: string
      status:
        description: Payment Card status
        enum:
          - active
          - expired
          - inactive
          - deactivated
          - pending
        readOnly: true
        type: string
      token:
        description: PaymentCardToken. Use without any other fields
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Card updated time
    type: object
  PaymentInstrument:
    description: Payment instrument object
    properties:
      gatewayAccountId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The payment gateway identifier string
      paymentCardId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: 'The payment card identifier string, required when paying by payment card'
    type: object
  PaymentInstrumentAch:
    description: Payment instrument object
    properties:
      bankAccountId:
        $ref: '#/definitions/ResourceId'
        description: 'The bank account identifier string, required when paying by ach'
      gatewayAccountId:
        $ref: '#/definitions/ResourceId'
        description: The payment gateway identifier string
    type: object
  PaymentToken:
    properties:
      _links:
        $ref: '#/definitions/Links'
      address:
        description: Customer's billing address 1
        type: string
      address2:
        description: Customer's billing address 2
        type: string
      city:
        description: Billing address city
        type: string
      country:
        description: Billing country - Two letter code
        type: string
      fingerprint:
        description: Device fingerprint hash
        type: string
      firstName:
        description: First name on payment card
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The token identifier string
        readOnly: true
      lastName:
        description: Last name on payment card
        type: string
      method:
        $ref: '#/definitions/Method'
        description: Payment Method
      paymentInstrument:
        $ref: '#/definitions/PaymentTokenInstrument'
      phoneNumber:
        description: Phone number
        type: string
      postalCode:
        description: Billing postal code
        type: string
      region:
        description: Billing region
        type: string
    required:
      - method
      - paymentInstrument
      - firstName
      - lastName
    type: object
  PaymentTokenInstrument:
    description: Payment Token instrument object
    properties:
      accountNumber:
        description: AccountNumber
        type: integer
      accountType:
        description: Account Type
        type: string
      bankName:
        description: Bank name
        type: string
      cvv:
        description: The CVV/CVC of the payment card
        type: string
      expMonth:
        description: Card's expiry month
        type: integer
      expYear:
        description: Card's expiry year
        type: integer
      pan:
        description: The card PAN (Primary Account Number)
        type: string
      routingNumber:
        description: Routing Number
        type: integer
    type: object
  Plan:
    properties:
      _links:
        $ref: '#/definitions/Links'
      contractTermLength:
        description: The length that corresponds with the contractTermUnit
        type: integer
      contractTermUnit:
        description: The unit of time
        enum:
          - day
          - week
          - month
          - year
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Plan created time
      currency:
        description: Currency (three letter ISO 4217 code)
        type: string
      currencySign:
        description: Currency sign
        type: string
      description:
        description: The plan description
        type: string
      expireTime:
        description: Time when the plan is not longer valid
        format: date-time
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The website identifier string
        readOnly: true
      isActive:
        description: 'If the plan is not active, customers cannot subscribe to the plan (default to true)'
        type: boolean
      maxQuantity:
        description: Maximum quantity per order (NULL if no maximum)
        type: integer
      minQuantity:
        description: 'Minimum quantity per order, defaults to 1'
        type: integer
      name:
        description: The plan name
        type: string
      recurringAmount:
        description: The amount that recurs according to the schedule
        format: double
        type: number
      recurringPeriodLength:
        description: The length of time (used with the recurringPeriodUnit)
        type: integer
      recurringPeriodLimit:
        description: The number of times a subscription will rebill until the contract is over
        type: integer
      recurringPeriodUnit:
        description: The unit of time
        enum:
          - day
          - week
          - month
          - year
        type: string
      richDescription:
        description: The plan rich description - supports HTML
        type: string
      setupAmount:
        description: The amount of a trial - 0 is a valid value (for free)
        format: double
        type: number
      trialAmount:
        description: The amount of a trial - 0 is a valid value (for free)
        format: double
        type: number
      trialPeriodLength:
        description: The length of time (used with the trialPeriodUnit)
        type: integer
      trialPeriodUnit:
        description: The unit of time
        enum:
          - day
          - week
          - month
          - year
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Plan updated time
    required:
      - name
      - currency
    type: object
  Product:
    description: |
      Your product includes digital goods, services, and physical goods.
      Products appear on invoice line items.  If you set a tax category identifier,
      taxes will be calculated upon invoice generation.
    example: |
      {
        "id": "stringid",
        "name": "Widget",
        "description": "Fantastic widget",
        "taxCategoryId": null,
        "customFields": [],
        "createdTime": "2015-08-27 13:45:12",
        "updatedTime": "2015-08-27 13:45:12",
        "_links": [
            {
              "rel": "self",
              "href": "https://api.rebilly.com/v2.1/products/stringid"
            }
        ]
      }
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The product created time
      customFields:
        description: Any custom object that may be stored with product (see custom fields)
        type: string
      description:
        description: The product description
        maxLength: 512
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The product identifier string
        readOnly: true
      name:
        description: The product name
        maxLength: 255
        type: string
      taxCategoryId:
        description: The product's tax category identifier string
        enum:
          - 99999
          - 20010
          - 40030
          - 51020
          - 51010
          - 31000
          - 30070
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The product updated time
    type: object
  ReportDisputes:
    items:
      properties:
        aggregationFieldValue:
          description: 'Selected aggregation field value (defined by query). It can be, for example, websiteId or country. You define it in aggregationField param in query.'
          type: string
        countPercentMastercard:
          description: Disputes count / Transaction count
          format: double
          type: number
        countPercentVisa:
          description: Disputes count / Transaction count
          format: double
          type: number
        disputesMastercard:
          description: Disputes count on Mastercard
          type: integer
        disputesVisa:
          description: Disputes count on Visa
          type: integer
        valuePercentMastercard:
          description: Disputes count / Value of settlement transactions
          format: double
          type: number
        valuePercentVisa:
          description: Disputes count / Value of settlement transactions
          format: double
          type: number
      type: object
    type: array
  ReportDunning:
    properties:
      data:
        items:
          properties:
            attempts:
              description: Attepmts count
              type: integer
            retryNumber:
              description: Retry attempts number
              type: integer
            successRate:
              description: Successful transactions ratio
              format: double
              type: number
            successfulTransactions:
              description: Successful transactons count
              type: integer
          type: object
        readOnly: true
        type: array
    type: object
  ReportStatistics:
    properties:
      cancels:
        description: Cancels count in last 24 hours
        type: integer
      cancelsGrowthPercentage:
        description: Cancels count growth (in percents) in last 24 hours (against previous 24 hours)
        format: double
        type: number
      customers:
        description: New customers count in last 24 hours
        type: integer
      customersGrowthPercentage:
        description: Customers count growth (in percents) in last 24 hours (against previous 24 hours)
        format: double
        type: number
      refunds:
        description: Refunds count
        type: integer
      refundsGrowthPercentage:
        description: Refunds count growth (in percents) in last 24 hours (against previous 24 hours)
        format: double
        type: number
      revenue:
        description: Revenue in last 24 hours
        format: double
        type: number
      revenueGrowthPercentage:
        description: Revenue growth (in percents) in last 24 hours (against previous 24 hours)
        format: double
        type: number
    type: object
  ReportSubscribers:
    properties:
      data:
        description: Report data
        items:
          properties:
            active:
              description: Active count
              type: integer
            cancelled:
              description: Cancelled count
              type: integer
            pastDue:
              description: Past Due count
              type: integer
            plan:
              description: Plan Name
              type: string
            trial:
              description: On trial count
              type: integer
          type: object
        type: array
      totalActive:
        description: Total active count
        type: integer
      totalCancelled:
        description: Total cancelled count
        type: integer
      totalOnTrial:
        description: Total on trial count
        type: integer
      totalPastDue:
        description: Total Past Due count
        type: integer
    type: object
  ReportTransactions:
    properties:
      data:
        items:
          properties:
            aggregationFieldValue:
              description: Selected aggregation field value
              type: string
            amount:
              description: Amount
              format: double
              type: number
            approvedThroughput:
              description: Successful transactons percentage
              type: integer
            authApprovedThroughput:
              description: Successful transactions count
              type: integer
            count:
              description: Transactions count
              format: double
              type: number
            refundsCount:
              description: Refunds count
              type: integer
            refundsValue:
              description: Refunds value
              format: double
              type: number
            salesAverage:
              description: Sales average value
              format: double
              type: number
            salesCount:
              description: Sales count
              type: integer
            salesValue:
              description: Sales value
              format: double
              type: number
          type: object
        readOnly: true
        type: array
    type: object
  ResetPassword:
    properties:
      newPassword:
        description: New password
        format: password
        type: string
    required:
      - newPassword
    type: object
  ResetPasswordToken:
    properties:
      _links:
        $ref: '#/definitions/Links'
      credential:
        description: Token's credential ID
        type: string
      expiredTime:
        description: Password expired time
        format: date-time
        type: string
      password:
        description: Token's password (only for POST)
        format: password
        type: string
      token:
        description: The token's identifier string
        readOnly: true
        type: string
      username:
        description: The token's username
        type: string
    required:
      - username
      - password
    type: object
  ResourceCustomFields:
    description: |
      "Custom Fields list as a map `{"custom field name": "custom field value", ...}"`.
      The format must follow the saved format (see Custom Fields section for the formats).
    type: object
  ResourceId:
    description: The resource ID. Defaults to UUID v4
    example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
    maxLength: 50
    type: string
  ScheduleMethod:
    description: The calculation instruction of scheduled time
    discriminator: method
    properties:
      method:
        enum:
          - auto
          - immediately
          - date-interval
          - day-of-month
          - day-of-week
        type: string
    required:
      - method
    type: object
  ServerTimestamp:
    description: 'Read-only timestamp, automatically assigned on back-end.'
    format: date-time
    readOnly: true
    type: string
  Session:
    properties:
      _links:
        $ref: '#/definitions/Links'
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Session created time
      expiredTime:
        description: Session expired time. Defaults to one hour
        format: date-time
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The session identifier string
        readOnly: true
      permissions:
        allOf:
          - $ref: '#/definitions/UserPermissions'
        description: The session's permissions. See the format in example
      token:
        description: The session's token used for authentication
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Session updated time
    required:
      - permissions
    type: object
  Signin:
    properties:
      email:
        description: Email
        type: string
      expiredTime:
        description: Session expired time. Defaults to one hour
        format: date-time
        type: string
      password:
        description: Password
        format: password
        type: string
    required:
      - email
      - password
    type: object
  Signup:
    properties:
      businessPhone:
        description: The user business phone number
        type: string
      company:
        description: The user's company name
        type: string
      currencies:
        default:
          - USD
        description: An array of currencies codes
        items:
          description: 3 letters ISO 4217 currency code
          type: string
        type: array
      email:
        description: The user email
        format: email
        maxLength: 100
        type: string
      firstName:
        description: The user first name
        type: string
      lastName:
        description: The user last name
        type: string
      merchantCategoryCode:
        default:
          - 5734
        description: An array of merchant cateogries codes. Defaults to "Computer Software Stores"
        items:
          description: Merchant category code
          type: integer
        type: array
      password:
        description: The user password
        format: password
        type: string
      website:
        description: The user's website address
        type: string
    required:
      - email
      - company
      - firstName
      - lastName
      - businessPhone
      - password
      - website
    type: object
  Status:
    properties:
      status:
        description: The API status. If everything is ok - value is 'ok'
        enum:
          - ok
        readOnly: true
        type: string
      time:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Current time
    type: object
  Subscription:
    properties:
      _links:
        $ref: '#/definitions/Links'
      activationTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Subscription activation time
      autopay:
        default: true
        description: Autopay determines if a payment attempt will be automatic
        type: boolean
      billingContactId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Unique id for each billing contact
      cancelledTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Subscription cancelled time
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Subscription created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Unique id for each customer
      deliveryContactId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Unique id for each delivery contact
      endTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Subscription end time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The Subscription identifier string
        readOnly: true
      initialInvoiceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Unique id for the initial invoice
      planId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Unique id for each plan
      quantity:
        description: Quantity for each subscription. Default value to 1
        type: integer
      renewalTime:
        description: Subscription renewal time
        format: date-time
        type: string
      startTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Subscription start time
      status:
        description: Subscription status
        readOnly: true
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Subscription updated time
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Unique id for each website
    required:
      - customerId
      - planId
      - websiteId
    type: object
  SubscriptionCancel:
    properties:
      policy:
        description: Cancel policy
        enum:
          - at-next-renewal
          - now-with-prorata-credit
          - now
        type: string
    required:
      - policy
    type: object
  SubscriptionSwitch:
    properties:
      planId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The plan identifier string
      policy:
        description: Switch policy
        enum:
          - at-next-renewal
          - now-with-prorata-credit
          - now
        type: string
      quantity:
        description: Quantity for each subscription. Default value to 1
        type: integer
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The website's ID
    required:
      - planId
      - policy
    type: object
  SubscriptionTracking:
    description: Tracking subscription log
    properties:
      _links:
        $ref: '#/definitions/Links'
        description: The links related to resource
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The log created time
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
      invoiceItemId:
        allOf:
          - $ref: '#/definitions/ResourceId'
      message:
        description: It contains the transaction number and renewal time
        type: string
      result:
        description: Subscription's result
        enum:
          - created
          - postponed
          - stopped
          - error
        type: string
      subscriptionId:
        allOf:
          - $ref: '#/definitions/ResourceId'
    readOnly: true
    type: object
  TaxCategory:
    properties:
      _links:
        $ref: '#/definitions/Links'
      description:
        description: The tax category description
        maxLength: 512
        type: string
      id:
        description: The tax category identifier string
        enum:
          - 99999
          - 20010
          - 40030
          - 51020
          - 51010
          - 31000
          - 30070
        maxLength: 50
        readOnly: true
        type: string
      taxProvider:
        description: The tax category maps to a provider
        enum:
          - tax-jar
        type: string
    type: object
  ThreeDSecure:
    properties:
      _links:
        $ref: '#/definitions/Links'
      amount:
        description: Transaction amount
        format: double
        type: number
      cavv:
        description: The ThreeDSecure entry cardholder authentication verification value
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The ThreeDSecure entry created time
      currency:
        description: The currency three letter code
        type: string
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Related customer ID
      eci:
        description: The ThreeDSecure entry electronic commerce indicator
        type: integer
      enrolled:
        description: Is the cardholder enrolled in 3DSecure
        enum:
          - 'Y'
          - 'N'
          - U
        type: string
      enrollmentEci:
        description: The ThreeDSecure entry enrollment eci
        type: string
      gatewayAccountId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Related gateway account ID
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The ThreeDSecure entry identifier string
        readOnly: true
      payerAuthResponseStatus:
        description: The ThreeDSecure entry Auth Response Status
        enum:
          - 'Y'
          - 'N'
          - U
          - A
        type: string
      paymentCardId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Related payment card ID
      signatureVerification:
        description: If signature was verified
        enum:
          - 'Y'
          - 'N'
        type: string
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Related Website ID
      xid:
        description: The ThreeDSecure entry transaction Id
        type: string
    required:
      - enrolled
      - enrollmentEci
      - customerId
      - gatewayAccountId
      - paymentCardId
      - websiteId
      - currency
      - amount
    type: object
  Time:
    format: date-time
    pattern: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](Z(\+|\-)([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])?$'
    type: string
  TimeUnit:
    enum:
      - second
      - seconds
      - minute
      - minutes
      - hour
      - hours
      - day
      - days
      - month
      - months
      - year
      - years
    type: string
  Transaction:
    properties:
      _links:
        $ref: '#/definitions/Links'
      acquirerName:
        description: 'Acquirer name, available only when method is ''payment_card'', else null'
        readOnly: true
        type: string
      amount:
        description: The transactions's amount
        format: double
        readOnly: true
        type: number
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Transaction created time
      currency:
        description: The transactions's currency
        readOnly: true
        type: string
      customerId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Customer's ID
        readOnly: true
      gatewayAccountId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The transactions's Gateway Account ID
        readOnly: true
      gatewayName:
        description: 'Payment Gateway name, available only when method is ''payment_card'', else null'
        readOnly: true
        type: string
      gatewayResponse:
        description: The transactions's processor response
        readOnly: true
        type: string
      gatewayTransactionId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The gateway's transaction ID
        readOnly: true
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The transaction identifier string
        readOnly: true
      method:
        $ref: '#/definitions/Method'
        description: Payment Method
      parentTransactionId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The transactions's parent ID
        readOnly: true
      paymentCardId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Payment Card's ID
        readOnly: true
      rebillNumber:
        description: The transactions's rebill number
        readOnly: true
        type: integer
      result:
        description: Transaction result
        enum:
          - approved
          - connection-error
          - declined
          - never-sent
          - pending
          - pending-processor
          - timeout
          - unknown
        readOnly: true
        type: string
      type:
        description: Transaction type
        enum:
          - authorize
          - capture
          - credit
          - refund
          - sale
          - void
        readOnly: true
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Transaction updated time
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: Website's ID
        readOnly: true
    type: object
  TransactionRefund:
    properties:
      amount:
        description: Refund amount
        format: double
        type: number
    required:
      - amount
    type: object
  UpdatePassword:
    properties:
      currentPassword:
        description: Current user's password - used when requesting password change
        format: password
        type: string
      newPassword:
        description: New user's password - used when requesting password change
        format: password
        type: string
    type: object
  User:
    properties:
      _links:
        $ref: '#/definitions/Links'
      businessPhone:
        description: The user business phone number
        type: string
      country:
        description: The user country setting - two letter code
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The user created time
      email:
        description: The user email
        format: email
        maxLength: 100
        type: string
      firstName:
        description: User's first name
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The user identifier string
        readOnly: true
      lastName:
        description: User's last name
        type: string
      loginTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The user last login time
      mobilePhone:
        description: The user mobile phone number
        type: string
      password:
        description: 'User''s password. If not provided, password reset email will be sent'
        format: password
        type: string
      permissions:
        allOf:
          - $ref: '#/definitions/UserPermissions'
        description: The user's permissions. See the format in example
      reportingCurrency:
        description: The user's ISO Alpha-3 code used for reports
        type: string
      status:
        description: The user status
        enum:
          - active
          - inactive
          - pending-confirmation
        readOnly: true
        type: string
      totpRequired:
        description: The user setting of two-factor authentification
        type: boolean
      totpSecret:
        description: The user TOTP key for authentification app (if TOTP enabled)
        type: string
      totpUrl:
        description: The user link to QR-code for TOTP authentification app (if TOTP enabled)
        format: url
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The user updated time
    required:
      - email
      - firstName
      - lastName
    type: object
  UserPermissions:
    example:
      - methods:
          - GET
          - POST
          - PUT
          - HEAD
          - DELETE
        resourceName: plans
      - methods:
          - GET
          - HEAD
        resourceIds:
          - 4f6cf35x-2c4y-483z-a0a9-158621f77a21
          - 1586f35x-4f6c-483z-a0a9-2c4y21f77a21
        resourceName: invoices
      - {}
    items:
      properties:
        methods:
          items:
            enum:
              - HEAD
              - GET
              - POST
              - PUT
              - DELETE
            type: string
          minItems: 1
          type: array
        resourceIds:
          items:
            $ref: '#/definitions/ResourceId'
          type: array
        resourceName:
          enum:
            - authentication-options
            - authentication-tokens
            - bank-accounts
            - blacklists
            - contacts
            - credentials
            - customers
            - custom-fields
            - disputes
            - gateway-accounts
            - invoices
            - lead-sources
            - layouts
            - organizations
            - payment-cards
            - payments
            - password-tokens
            - plans
            - queue
            - subscriptions
            - transactions
            - tokens
            - websites
          type: string
      type: object
    minItems: 1
    type: array
  Website:
    properties:
      _links:
        $ref: '#/definitions/Links'
      checkoutPageUri:
        description: Your own custom URI for this Checkout Page
        type: string
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Website created time
      customFields:
        $ref: '#/definitions/ResourceCustomFields'
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
        description: The website identifier string
        readOnly: true
      name:
        description: The website's name
        type: string
      serviceEmail:
        description: The website's customer service email address
        format: email
        type: string
      servicePhone:
        description: The website's customer service phone number
        type: string
      updatedTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Website updated time
      url:
        description: The website's domain address
        type: string
    required:
      - name
      - url
      - servicePhone
      - serviceEmail
    type: object
  WebsiteWebhook:
    properties:
      webHookPassword:
        description: Webhook HTTP Authentication Password. An empty string will be returned in the response
        type: string
      webHookUrl:
        description: Webhook Url
        type: string
      webHookUsername:
        description: Webhook HTTP Authentication Username
        type: string
    required:
      - webHookUrl
      - webHookUsername
      - webHookPassword
    type: object
  WebsiteWebhookTracking:
    description: Webhook Tracking Requests.
    properties:
      _links:
        $ref: '#/definitions/Links'
        description: The links related to resource
      createdTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: The log created time
      eventName:
        description: Event name for which webhook was called
        type: string
      id:
        allOf:
          - $ref: '#/definitions/ResourceId'
      nextSentTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Next sent time
      pushData:
        description: Event's data information JSON-string
        type: string
      response:
        description: HTTP code response
        type: integer
      sentTime:
        allOf:
          - $ref: '#/definitions/ServerTimestamp'
        description: Sent time
      status:
        description: Event's status
        enum:
          - fail
          - success
        type: string
      websiteId:
        allOf:
          - $ref: '#/definitions/ResourceId'
    readOnly: true
    type: object
  ach:
    allOf:
      - $ref: '#/definitions/Payment'
      - properties:
          paymentInstrument:
            $ref: '#/definitions/PaymentInstrumentAch'
        required:
          - paymentInstrument
        type: object
    description: An Payment using ACH
  and:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/logical'
    description: Logical AND
    type: object
  auto:
    allOf:
      - $ref: '#/definitions/ScheduleMethod'
    description: Rebilly will choose the best time to schedule the attempt
  between:
    allOf:
      - $ref: '#/definitions/Condition'
      - properties:
          max:
            type: string
          min:
            type: string
          path:
            type: string
        required:
          - path
          - min
          - max
        type: object
    description: Between condition
    type: object
  compare:
    properties:
      path:
        type: string
      value:
        type: string
    required:
      - path
      - value
    type: object
  date-interval:
    allOf:
      - $ref: '#/definitions/ScheduleMethod'
      - properties:
          duration:
            minimum: 1
            type: integer
          unit:
            $ref: '#/definitions/TimeUnit'
        required:
          - duration
          - unit
        type: object
  day-of-month:
    allOf:
      - $ref: '#/definitions/ScheduleMethod'
      - properties:
          day:
            description: |
              The day of the month when event will be scheduled.
              Be aware if the month has less days,
              the last day of the month will be selected.
            maximum: 31
            minimum: 1
            type: integer
          time:
            $ref: '#/definitions/Time'
        required:
          - day
        type: object
  day-of-week:
    allOf:
      - $ref: '#/definitions/ScheduleMethod'
      - properties:
          day:
            $ref: '#/definitions/DayOfWeek'
          time:
            $ref: '#/definitions/Time'
          week:
            default: next
            enum:
              - next
              - first-in-month
              - last-in-month
            type: string
        required:
          - day
        type: object
  equals:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/compare'
    description: Equals condition
    type: object
  full-price:
    allOf:
      - $ref: '#/definitions/AmountAdjustment'
  gt:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/compare'
    description: Greater than condition
    type: object
  gte:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/compare'
    description: Greater than or equals condition
    type: object
  immediately:
    allOf:
      - $ref: '#/definitions/ScheduleMethod'
  in:
    allOf:
      - $ref: '#/definitions/Condition'
      - properties:
          path:
            type: string
          values:
            items:
              type: string
            type: array
        required:
          - path
          - values
        type: object
    description: In condition
    type: object
  logical:
    properties:
      conditions:
        items:
          $ref: '#/definitions/Condition'
        minItems: 2
        type: array
    required:
      - conditions
    type: object
  logical-not:
    example:
      condition:
        operation: equals
        path: /name
        value: John Dou
      operation: not
    properties:
      condition:
        $ref: '#/definitions/Condition'
    required:
      - condition
    type: object
  lt:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/compare'
    description: Less than condition
    type: object
  lte:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/compare'
    description: Less than or equals condition
    type: object
  not:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/logical-not'
    description: Logical NOT
    type: object
  or:
    allOf:
      - $ref: '#/definitions/Condition'
      - $ref: '#/definitions/logical'
    description: Logical OR
    type: object
  partial-amount:
    allOf:
      - $ref: '#/definitions/AmountAdjustment'
      - properties:
          amount:
            description: The payment amount
            type: string
        required:
          - amount
        type: object
  payment_card:
    allOf:
      - $ref: '#/definitions/Payment'
      - properties:
          paymentInstrument:
            $ref: '#/definitions/PaymentInstrument'
        required:
          - paymentInstrument
        type: object
    description: A Payment using a Payment Card
  rate-discount:
    allOf:
      - $ref: '#/definitions/AmountAdjustment'
      - properties:
          rate:
            description: The rate of payment amount
            type: string
        required:
          - rate
        type: object
